[{"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\index.js":"1","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\App.js":"2","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\reportWebVitals.js":"3","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\Login.js":"4","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\Navbar.js":"6","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\home.js":"7","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\UserContext.js":"8","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\authOptions.js":"9","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\ProfileContext.js":"10","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\CurrentLogContext.js":"11","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\CurrentTrainContext.js":"12","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\LogForm.js":"13","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\Log.js":"14","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Cleaning.js":"15","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Header.js":"16","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Coach.js":"17","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Staff.js":"18","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Trains.js":"19","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\SickCoach.js":"20","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\AntSwitch.js":"21","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Header.js":"22","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Staff.js":"23","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Coach.js":"24","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\SickCoach.js":"25","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\logFormStyles.js":"26","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\SideBar.js":"27","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\styles\\trainFormStyles.js":"28","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\DeleteButton.js":"29","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\CoachRow.js":"30","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Train.js":"31","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Trains.js":"32","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\CoachTable.js":"33","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\CoachRow.js":"34","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\SickCoachRow.js":"35","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\SickCoachRow.js":"36","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\icons\\iconsArray.js":"37"},{"size":198,"mtime":1609789171674,"results":"38","hashOfConfig":"39"},{"size":4041,"mtime":1614791679134,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":5314,"mtime":1615231826651,"results":"42","hashOfConfig":"39"},{"size":5752,"mtime":1614794193446,"results":"43","hashOfConfig":"39"},{"size":6090,"mtime":1614357542201,"results":"44","hashOfConfig":"39"},{"size":10995,"mtime":1615134105485,"results":"45","hashOfConfig":"39"},{"size":81,"mtime":1607851197492,"results":"46","hashOfConfig":"39"},{"size":2590,"mtime":1613749560269,"results":"47","hashOfConfig":"39"},{"size":81,"mtime":1608041731696,"results":"48","hashOfConfig":"39"},{"size":131,"mtime":1608917814682,"results":"49","hashOfConfig":"39"},{"size":81,"mtime":1608819428251,"results":"50","hashOfConfig":"39"},{"size":2139,"mtime":1612453715012,"results":"51","hashOfConfig":"39"},{"size":2899,"mtime":1615484558644,"results":"52","hashOfConfig":"39"},{"size":4972,"mtime":1608732242387,"results":"53","hashOfConfig":"39"},{"size":8471,"mtime":1613751343486,"results":"54","hashOfConfig":"39"},{"size":11250,"mtime":1614090561677,"results":"55","hashOfConfig":"39"},{"size":6621,"mtime":1613570508680,"results":"56","hashOfConfig":"39"},{"size":23440,"mtime":1614271781533,"results":"57","hashOfConfig":"39"},{"size":3304,"mtime":1612454378615,"results":"58","hashOfConfig":"39"},{"size":1850,"mtime":1608300132283,"results":"59","hashOfConfig":"39"},{"size":2650,"mtime":1615131797144,"results":"60","hashOfConfig":"39"},{"size":6207,"mtime":1615482634823,"results":"61","hashOfConfig":"39"},{"size":4745,"mtime":1609512370542,"results":"62","hashOfConfig":"39"},{"size":1892,"mtime":1612454975190,"results":"63","hashOfConfig":"39"},{"size":4331,"mtime":1613753405889,"results":"64","hashOfConfig":"39"},{"size":389,"mtime":1610099708244,"results":"65","hashOfConfig":"39"},{"size":4568,"mtime":1614091971249,"results":"66","hashOfConfig":"39"},{"size":3262,"mtime":1613575751228,"results":"67","hashOfConfig":"39"},{"size":11502,"mtime":1614090166602,"results":"68","hashOfConfig":"39"},{"size":16554,"mtime":1613585318384,"results":"69","hashOfConfig":"39"},{"size":16786,"mtime":1615484647996,"results":"70","hashOfConfig":"39"},{"size":1980,"mtime":1612454942520,"results":"71","hashOfConfig":"39"},{"size":5919,"mtime":1612456113682,"results":"72","hashOfConfig":"39"},{"size":7179,"mtime":1613585247309,"results":"73","hashOfConfig":"39"},{"size":2684,"mtime":1612455058325,"results":"74","hashOfConfig":"39"},{"size":8486,"mtime":1615232640404,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"ba5r7u",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"78"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"78"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\index.js",[],["172","173"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\App.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\Login.js",["174"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom' //for url history\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport UserContext from '../../context/UserContext'\r\nimport axios from 'axios'\r\nimport iconsArray from '../../icons/iconsArray'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    backgroundColor:'',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.up('md')]:{\r\n      width:'100%',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent:'space-between',\r\n      flexWrap: 'wrap',\r\n    },\r\n    '& > *':{\r\n      maxWidth: '412px',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#1f2833\",\r\n  },\r\n  link:{\r\n    // textDecoration: 'none',\r\n    color: 'black'\r\n  },\r\n  intro: {\r\n    textAlign: 'center',\r\n  },\r\n  introTagline:{\r\n    fontSize: '1.5rem'\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const {register, handleSubmit } = useForm()\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const [loginError, setloginError] = useState(false)\r\n    const [helperTextEmail, sethelperTextEmail] = useState('')\r\n    const [helperTextPassword, sethelperTextPassword] = useState('')\r\n\r\n    const onSubmit = async data=> {\r\n      console.log(data)\r\n      axios\r\n      .post(\"api/auth\",data)\r\n      .then(async response=> {\r\n        console.log(response)\r\n        const token = response.data.token\r\n        const tokenRes = await axios.get(\r\n          \"/api/auth\",\r\n          { headers: { \"x-auth-token\": token}}\r\n        )\r\n\r\n        setUserData({\r\n          token,\r\n          user: tokenRes.data\r\n        })\r\n        localStorage.setItem('x-auth-token', token);\r\n        history.push('/home')\r\n      })\r\n      .catch(err=> {\r\n        console.log('!!!!!!!!!!!'+err)\r\n        setloginError(true)\r\n        sethelperTextEmail('Enter Valid Email ID')\r\n        sethelperTextPassword('Enter Valid Password')\r\n        console.log(data)\r\n      })\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" className={classes.root}>\r\n        <div className={classes.intro}>\r\n          <p>\r\n            Rake Maintenance Diary is a simple Web-App which stores information\r\n            of trians and coaches which are maintained in depot daily.\r\n          </p>\r\n          <p className={classes.introTagline}> \r\n            It's Digital. It's Online. It's Paperless!\r\n          </p>\r\n          {iconsArray}\r\n        </div>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <LockIcon />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              inputRef={register}\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              error={loginError}\r\n              helperText={helperTextEmail}\r\n              onChange={()=>{ sethelperTextEmail(''); setloginError(false)}}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              inputRef={register}\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              error={loginError}\r\n              helperText={helperTextPassword}\r\n              onChange={()=>{ sethelperTextPassword(''); setloginError(false)}}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to='/register' variant=\"body2\" className={classes.link}>\r\n                  {\"New User? Sign up/ Register Here\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\nexport default Login;\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\Navbar.js",["175","176"],"import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ProfileContext from '../context/ProfileContext' \r\nimport AuthOptions from '../components/auth/authOptions'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport './styles/Navbar.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    navbar: {\r\n      // backgroundColor: \"#f4976c\", \r\n      backgroundColor: \"#071e3d\", \r\n      boxShadow: 'none',\r\n      color: 'white',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(1),\r\n      [theme.breakpoints.down('xs')]:{\r\n        padding: '0px'\r\n      }\r\n    },\r\n    allLogs: {\r\n      textDecoration: 'none',\r\n      color: 'white',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      // padding: theme.spacing(1),\r\n    },\r\n    allLogsLabel:{\r\n      marginRight :theme.spacing(1),\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none'\r\n      },\r\n    },\r\n    appTitle: {\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height:'64px',\r\n      display: 'flex',\r\n      color: 'white',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      fontWeight: 'bold',\r\n      // backgroundColor: 'grey',\r\n      fontSize: '1.5rem',\r\n      [theme.breakpoints.down('xs')]:{\r\n        fontSize: '1.2rem',\r\n        height: '48px'\r\n      },\r\n      [theme.breakpoints.between('md', 'md')]:{\r\n        height:'76px',\r\n      }\r\n    },\r\n    userButton:{\r\n      zIndex: '2',\r\n      color: 'white',\r\n      // display: 'flex',\r\n      // alignItems: 'center',\r\n      // justifyContent: 'space-between',\r\n    },\r\n    authOptions: {\r\n      // padding: theme.spacing(2),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      width: '100%',\r\n      backgroundColor: '#bfbfbf'\r\n    },\r\n    userName:{\r\n      marginRight :theme.spacing(1),\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none'\r\n      }\r\n    },\r\n    userIcon:{\r\n      marginTop: '5px',\r\n      marginLeft: '0px',\r\n    },\r\n    leftSide:{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '15%',\r\n        justifyContent: 'space-around'\r\n      },\r\n      zIndex: '2',\r\n    },\r\n    date:{ \r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none'\r\n      }\r\n    },\r\n    popOver: {\r\n      // backgroundColor: '',\r\n      width: '200px',\r\n      height: '100px'\r\n    },\r\n  }));\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles(),\r\n    { profileData, setProfileData } = useContext(ProfileContext),\r\n\r\n    [auth, setAuth] = React.useState(true),\r\n    [anchorEl, setAnchorEl] = React.useState(null),\r\n    date = new Date(),\r\n          dayy = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n          defDate = {\r\n            dd : date.getDate(),\r\n            mm : date.getMonth()+1,\r\n            yyyy:date.getFullYear(),\r\n            day: dayy[date.getDay()]\r\n          },\r\n          currentDate = `${defDate.dd}/0${defDate.mm}/${defDate.yyyy}`,\r\n\r\n    handleMenuOpen = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n  \r\n    handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{boxShadow: 'none'}}>\r\n            <div variant=\"h6\" className={classes.navbar}>\r\n              <span className={classes.leftSide}>\r\n                <Button>\r\n                  <Link to='/' className={classes.allLogs}>\r\n                    <span className={classes.allLogsLabel}>All Logs</span>\r\n                    <Tooltip title=\"All Logs\" className={classes.tooltip}>\r\n                      <AppsIcon />\r\n                    </Tooltip>\r\n                  </Link>\r\n                </Button>\r\n                <span className={classes.date}>{currentDate}</span>\r\n              </span>\r\n              {/* <span className={classes.rightSide}> */}\r\n                    <Button type=\"button\"  className={classes.userButton} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenuOpen}>\r\n                      {\r\n                        //show username if logged in else show nothing\r\n                        profileData.name ? \r\n                          <span className={classes.userName}>{profileData.name}</span>\r\n                        :\r\n                          <> </>\r\n                      }\r\n                      <Tooltip title=\"User\" className={classes.tooltip}>\r\n                        <span className={classes.userIcon}><AccountCircleIcon /></span>\r\n                      </Tooltip> \r\n                    </Button>\r\n                    <Menu\r\n                      id=\"simple-menu\"\r\n                      anchorEl={anchorEl}\r\n                      keepMounted\r\n                      open={Boolean(anchorEl)}\r\n                      onClose={handleClose}\r\n                      style={{marginTop: '60px'}}\r\n                    >\r\n                      <div className={classes.popOver}>\r\n                      {auth && (\r\n                      <span className={classes.authOptions}>\r\n                        <MenuItem onClick={handleClose}><AuthOptions/></MenuItem>\r\n                      </span>\r\n                      )}\r\n                      </div>\r\n                    </Menu>\r\n              {/* </span> */}\r\n            </div>\r\n              <span className={classes.appTitle}>\r\n                Rake Maintenance Diary\r\n              </span>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Navbar;\r\n\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\home.js",["177","178","179","180","181","182","183"],"import React, { useEffect, useContext } from 'react'\r\nimport UserContext from '../context/UserContext' \r\nimport ProfileContext from '../context/ProfileContext' \r\nimport CurrentLogContext from '../context/CurrentLogContext'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport GridOffIcon from '@material-ui/icons/GridOff';\r\n\r\nimport axios from 'axios'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst cardColors = ['#000', '#55c202', '#c20202', '#c26502', '#a2c202', '#0cc202', '#02afc2', '#c20242', '#c2b802']\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems:'center',\r\n    justifyContent: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      // width: theme.spacing(16),\r\n      height: 'auto'\r\n    },\r\n    maxWidth: '1200px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    [theme.breakpoints.down('sm')]:{\r\n        margin: theme.spacing(1)\r\n    } \r\n  },\r\n  profilePaper:{\r\n    // backgroundColor: 'inherit',\r\n    maxWidth: '1125px',\r\n    // fontSize: '25px',\r\n    // height: '250px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    '& > *': {\r\n    },\r\n  },\r\n  paperObject:{\r\n    width: '40%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderRadius:'5px',\r\n    // backgroundColor: '#f3f169',\r\n    margin: '4px 0px',\r\n    [theme.breakpoints.between('sm','md')]: {\r\n      maxWidth: '50%'\r\n    },\r\n    padding: '8px',\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%'\r\n    },\r\n    maxWidth: '500px'\r\n  },\r\n  paperProperty:{\r\n    // fontWeight: 'bold'\r\n  },\r\n  paperValue: {\r\n    fontSize: '2rem',\r\n    margin: '4px 0',\r\n    '& > *': {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'baseline',\r\n        margin: '4px',\r\n        // backgroundColor: 'blue'\r\n    }\r\n  },\r\n  logPaper: {\r\n    width: '80%',\r\n    height: '60px',\r\n    backgroundColor:'blue',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  createLog:{\r\n    // backgroundColor: 'red',\r\n\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    marginTop:'16px',\r\n    padding: '4px',\r\n    '& > *': {\r\n      textDecoration: 'none',\r\n      color: 'black',\r\n      display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n      '& > *': {\r\n        margin: '4px'\r\n      }\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: '#f4976c'\r\n    },\r\n  },\r\n  allLogs: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    left: 'auto',\r\n    right: 'auto',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n    maxWidth: '500px',\r\n    margin: '4px',\r\n    // backgroundColor:'#f3f169',\r\n    [theme.breakpoints.up('lg')]: {\r\n      // margin: '8px 22px',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      margin:'4px 0px',\r\n    },\r\n    boxShadow: '2px 2px 6px 0px rgba(50, 50, 50, 0.83)',\r\n  },\r\n  addIcon:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    // flexDirection:'column',\r\n    flexWrap: 'wrap',\r\n    // backgroundColor: 'red',\r\n    height: '80%',\r\n    width: '100%',\r\n  },\r\n  cardRoot:{\r\n    padding: '0px 0px',\r\n    // backgroundColor: 'black'\r\n  },\r\n  iconCardRoot:{\r\n    height: '100%',\r\n    padding: '0px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    // flexDirection: 'column',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    display: 'flex',\r\n    alignItems: 'baseline',\r\n    justifyContent: 'space-between',\r\n    padding: '0px 4px'\r\n  },\r\n  dateDay:{\r\n    fontSize: 14,\r\n    display: 'flex',\r\n    alignItems: 'baseline',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    padding: '4px 4px',\r\n    // backgroundColor: '#eac100',\r\n    '& > *':{\r\n      color: '',\r\n    },\r\n  },\r\n  cardActions:{\r\n    display: 'flex', \r\n    justifyContent: 'center'\r\n  },\r\n  openLogButton:{\r\n    border: '1px soild grey',\r\n    // backgroundColor: 'grey',\r\n    borderRadius: '5px'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    padding: '0px 4px'\r\n  },\r\n  noLogMsg:{\r\n    width: '50%',\r\n    fontSize: '1rem',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    margin: '32px',\r\n    border: '1px solid black',\r\n    borderRadius: '5px',\r\n    padding: '8px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst Home = (props) => {\r\n    const { userData } = useContext(UserContext)\r\n    const token = userData.token\r\n    const { profileData, setProfileData } = useContext(ProfileContext)\r\n    const { CurrentLog, setCurrentLog} = useContext(CurrentLogContext)\r\n    const classes = useStyles();\r\n    const { root, profilePaper } = classes\r\n    // const [Logs, setLogs] = useState([])\r\n    // const bull = <span className={classes.bullet}>•</span>;\r\n    // // \r\n    \r\n    const loadProfile = async ()=> {\r\n      //check userProfile in local storage\r\n      let data;\r\n      // if(localStorage.getItem('userProfile')){  //if true, load profile from local storage\r\n      //   console.log('getting profile from local storage...')\r\n      //   data = await JSON.parse(localStorage.getItem('userProfile'))\r\n      //   setProfileData({\r\n      //     name : data.name,\r\n      //     designation: data.designation,\r\n      //     batch: data.batch,\r\n      //     logs: [...data.logs] \r\n      //   })\r\n      //   console.log('Abra Kadabra')\r\n        \r\n      // }else{    //else fetch from from server\r\n        console.log('fetching profile from server...') \r\n        let response = await axios.get('api/profile/me', { headers: { \"x-auth-token\": token}})\r\n\r\n        localStorage.setItem('userProfile', JSON.stringify(response.data));\r\n        data = await JSON.parse(localStorage.getItem('userProfile'))\r\n        setProfileData({\r\n          name : data.name,\r\n          designation: data.designation,\r\n          batch: data.batch,\r\n          logs: [...data.logs] ,\r\n          employeeId: data.employeeId\r\n        })\r\n      // }\r\n\r\n      console.log(data.logs)\r\n      await setCurrentLog(undefined)\r\n      // await setLogs([...profileData.logs])  \r\n      // console.log(Logs)\r\n    }\r\n    \r\n    useEffect(async ()=>{\r\n      await loadProfile();\r\n      console.log('home page loaded + Profile')\r\n    },[])\r\n\r\n\r\n    const displayTrainOnCard = (log)=> {\r\n      const array = [];\r\n      log.trains.map(train => {\r\n        array.push(\r\n          <Typography variant=\"body2\" component=\"p\" className={classes.title}>\r\n            <span style={{textAlign: 'left'}}>{\"Train No: \" + train.trainNo}</span>\r\n            <span>{train.trainName}</span> \r\n          </Typography>\r\n        )\r\n      })\r\n      return array\r\n    }\r\n\r\n    const displayLog = ()=> {\r\n      let divArray = []\r\n      let num = 0\r\n      profileData.logs.map(log=>{\r\n        // num === cardColors.length-1 ? num=0 : num++  //to generate font-color \r\n        divArray.push(<Card className={classes.card}>\r\n          <CardContent className={classes.cardRoot} style={{color: cardColors[num]}}>\r\n            <Typography className={classes.dateDay} style={{color: cardColors[num]}} gutterBottom>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {log.header[0].date}\r\n              </Typography>\r\n              <span>{log.header[0].day}</span>\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n                <span>{log.header[0].depot}</span>\r\n            </Typography>\r\n              {\r\n                log.trains[0] ?  \r\n                  displayTrainOnCard(log)\r\n                : \r\n                  <Typography variant=\"body2\" component=\"p\" className={classes.title}>\r\n                        <span>No Trains</span> \r\n                  </Typography>\r\n              }\r\n          </CardContent>\r\n          <CardActions className={classes.cardActions}>\r\n            <Link to={{ pathname: \"/Log\", state: log }} style={{textDecoration:'none'}}>\r\n              <Button size=\"small\" variant=\"outlined\" className={classes.openLogButton}>\r\n                Open Log\r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        </Card>)\r\n      })\r\n      return divArray.reverse();\r\n    }\r\n\r\n    return (\r\n          !userData.user ?     //check if not logged in\r\n            <h1>You need to be logged in to Access this page!</h1>\r\n          :\r\n          <div className={root}>\r\n            <Paper elevation={1} className={profilePaper}>\r\n              <div className={classes.paperObject}>\r\n                <span className={classes.paperProperty}>Train Examiner</span>  \r\n                <span className={classes.paperValue}>{profileData.name}</span>\r\n              </div>\r\n              <div className={classes.paperObject}>\r\n                <span className={classes.paperProperty}>Designation</span> \r\n                <span className={classes.paperValue}>{profileData.designation}</span>\r\n              </div>\r\n              <div className={classes.paperObject}>\r\n                <span className={classes.paperProperty}>Employee ID</span> \r\n                <span className={classes.paperValue}>{profileData.employeeId}</span>\r\n              </div>\r\n              <div className={classes.paperObject}>\r\n                <span className={classes.paperProperty}>Batch</span> \r\n                <span className={classes.paperValue}>{profileData.batch}</span>\r\n              </div>\r\n              {/* <span className={classes.paperObject}>\r\n                <span className={classes.paperProperty}>Staff</span> \r\n                <span className={classes.paperValue}>{profileData.staff}</span>\r\n              </span> */}\r\n              {/* <span className={singleLog}></span> */}\r\n            </Paper>\r\n                <Link to='/LogForm' style={{textDecoration:'none'}}>\r\n                    <Button size=\"small\" variant=\"outlined\" className={classes.openLogButton}>\r\n                      Create New Log\r\n                      <PostAddIcon fontSize=\"large\"/>\r\n                    </Button>\r\n                </Link>\r\n            \r\n            <div className={classes.allLogs}> \r\n              {\r\n                profileData.logs.length > 0 ?\r\n                  displayLog()\r\n                :\r\n                  <div className={classes.noLogMsg}>\r\n                    <GridOffIcon />  \r\n                    <span>No Logs Added! </span>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\UserContext.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\auth\\authOptions.js",["184","185"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom' //for url history\r\nimport UserContext from '../../context/UserContext'\r\nimport CurrentLogContext from '../../context/CurrentLogContext'\r\nimport ProfileContext from '../../context/ProfileContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        border: '1px solid black',\r\n        color: 'black',\r\n        '&:hover':{\r\n            backgroundColor: '#fbe8a6',\r\n            // border: 'none'\r\n          }\r\n    },\r\n    logOut: {\r\n        display: 'flex',\r\n        alignItems:'center',\r\n        justifyContent: 'space-between',\r\n        width: '200px',\r\n        color: 'black',\r\n        '&:hover':{\r\n            // backgroundColor: '#fbe8a6',\r\n            // border: 'none'\r\n          }\r\n    }\r\n}))\r\n\r\nconst AuthOptions = () => {\r\n    const classes = useStyles();\r\n    const {userData, setUserData} = useContext(UserContext)\r\n    const {CurrentLog, setCurrentLog} = useContext(CurrentLogContext)\r\n    const { profileData, setProfileData } = useContext(ProfileContext)\r\n\r\n    const   history = useHistory(),\r\n            register = ()=> history.push('/register'),\r\n            login = ()=> history.push('/login'),\r\n            logout = ()=> {\r\n                setUserData({\r\n                    token: undefined,\r\n                    user: undefined\r\n                })\r\n                setCurrentLog(undefined)\r\n                setProfileData({\r\n                    name: '',\r\n                    designation: '',\r\n                    batch: '',\r\n                    logs: []\r\n                  })\r\n                localStorage.setItem(\"x-auth-token\", \"\")\r\n                localStorage.setItem(\"userProfile\", \"\")\r\n                history.push('/login')\r\n            }   \r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userData.user ?\r\n                <span onClick={logout} className={classes.logOut}>\r\n                    <ExitToAppIcon />\r\n                    <span> Log Out</span>\r\n                </span>\r\n                :\r\n                <div>\r\n                <span onClick={register} className={classes.button}>Register</span>\r\n                <span onClick={login} className={classes.button}>Log In</span>\r\n                </div>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthOptions\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\ProfileContext.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\CurrentLogContext.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\context\\CurrentTrainContext.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\LogForm.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\Log.js",["186"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Cleaning.js",["187","188","189","190","191","192","193","194","195","196"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport UserContext from '../../context/UserContext' \r\nimport ProfileContext from '../../context/ProfileContext' \r\nimport CurrentLogContext from '../../context/CurrentLogContext'\r\nimport axios from 'axios'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AntWitch from './AntSwitch'\r\nimport CheckBox from '@material-ui/icons/CheckBox';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      margin: theme.spacing(2),\r\n      padding: theme.spacing(3)\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around', \r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\nconst Cleaning = () => {\r\nconst classes = useStyles(),\r\n    { CurrentLog, setCurrentLog} = useContext(CurrentLogContext),\r\n    { userData, setUserData } = useContext(UserContext),\r\n    token = userData.token;\r\n\r\n    const [state, setState] = useState({\r\n      WashingAndCleaning : false,\r\n      InternalCleaning: false,\r\n      ExternalCleaning: false,\r\n      LavatoryFloorCleaning: false,\r\n      DisinfectionOfLavatory: false,\r\n      PestControl: false\r\n    })\r\n    \r\n    const works = ['Washing And Cleaning', 'Internal Cleaning', 'External Cleaning', 'Lavatory Floor Cleaning', 'Disinfection Of Lavatory', 'Pest Control']\r\n    const divName = ['WashingAndCleaning', 'InternalCleaning', 'ExternalCleaning', 'LavatoryFloorCleaning', 'DisinfectionOfLavatory', 'PestControl']\r\n    \r\n    const body = {\r\n      washingAndCleaning : state.WashingAndCleaning,\r\n      internalCleaning : state.InternalCleaning,\r\n      externalCleaning : state.ExternalCleaning,\r\n      lavatoryFloorCleaning : state.LavatoryFloorCleaning,\r\n      disinfectionOfLavatory : state.DisinfectionOfLavatory,\r\n      pestControl : state.PestControl,\r\n    }\r\nconst handleChange = (event) => {\r\n      setState({ ...state, [event.target.name]: event.target.checked });\r\n      },\r\n      \r\n    hanldeSubmit = async (evt)=> {\r\n      evt.preventDefault()\r\n      sendData()\r\n    },\r\n    sendData = async ()=> {\r\n         //considering log exists already\r\n        //  console.log(body)\r\n        await axios\r\n        .post(`api/log/washingAndCleaning/${CurrentLog}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log(response)\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n        \r\n    }\r\n      \r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <span>Cleaning and Wasing Works</span>\r\n            <form className={classes.form} onSubmit={(evt)=>hanldeSubmit(evt)}>\r\n              <div>\r\n              Washing And Cleaning\r\n                <Checkbox\r\n                  checked={state.WashingAndCleaning}\r\n                  onChange={handleChange}\r\n                  name= 'WashingAndCleaning'\r\n                  color=\"primary\"\r\n\r\n                />\r\n              </div>\r\n              <div>\r\n              Internal Cleaning\r\n                <Checkbox\r\n                  checked={state.InternalCleaning}\r\n                  onChange={handleChange}\r\n                  name= 'InternalCleaning'\r\n                  color=\"primary\"\r\n                  \r\n                />\r\n              </div>\r\n              <div>\r\n              External Cleaning\r\n                <Checkbox\r\n                  checked={state.ExternalCleaning}\r\n                  onChange={handleChange}\r\n                  name= 'ExternalCleaning'\r\n                  color=\"primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n              Lavatory Floor Cleaning\r\n                <Checkbox\r\n                  checked={state.LavatoryFloorCleaning}\r\n                  onChange={handleChange}\r\n                  name= 'LavatoryFloorCleaning'\r\n                  color=\"primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n              Disinfection Of Lavatory\r\n                <Checkbox\r\n                  checked={state.DisinfectionOfLavatory}\r\n                  onChange={handleChange}\r\n                  name= 'DisinfectionOfLavatory'\r\n                  color=\"primary\"\r\n                />\r\n              </div>\r\n              <div>\r\n              Pest Control\r\n                <Checkbox\r\n                  checked={state.PestControl}\r\n                  onChange={handleChange}\r\n                  name= 'PestControl'\r\n                  color=\"primary\"\r\n                />\r\n              </div>\r\n              <button type='submit'>Save</button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Cleaning\r\n",["197","198"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Header.js",["199","200","201"],"import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport UserContext from '../../context/UserContext' \r\nimport ProfileContext from '../../context/ProfileContext' \r\nimport CurrentLogContext from '../../context/CurrentLogContext'\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from './logFormStyles'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n} \r\n\r\n\r\nconst Header = (props) => {\r\n  const { enableStaffAndTrain } = props;\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  const { CurrentLog, setCurrentLog} = useContext(CurrentLogContext)\r\n  const token = userData.token\r\n    const classes = useStyles();\r\n    const num = \"12:00\";\r\n    const [from, setFrom] = useState(num)\r\n    const [to, setTo] = useState(num)\r\n    const date = new Date(),\r\n          dayy = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n          defDate = {\r\n            dd : date.getDate(),\r\n            mm : date.getMonth()+1,\r\n            yyyy:date.getFullYear(),\r\n            day: dayy[date.getDay()]\r\n          },\r\n          Place = ['GCMC', 'OWS', 'NWS']\r\n    let currentDate = `${defDate.yyyy}-0${defDate.mm}-${defDate.dd}`\r\n    // const [ddmmyy, setDDMMYY] = useState(Place[0])\r\n    const [place, setPlace] = useState(Place[0])\r\n    const [day, setDay] = useState(defDate.day)\r\n    // const [open, setOpen] = React.useState(false);\r\n    const [snackbarState, setsnackbarState] = React.useState({\r\n      snackBarOpen: false,\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    });\r\n    const { snackBarOpen, vertical, horizontal } = snackbarState;\r\n\r\n    const handleClick = (newState) => () => {\r\n      setsnackbarState({ snackBarOpen: true, vertical: 'top', horizontal: 'center'});  \r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setsnackbarState({ ...snackbarState, snackBarOpen: false });\r\n    };\r\n    if(defDate.mm < 10) {\r\n      currentDate = `${defDate.yyyy}-0${defDate.mm}-${defDate.dd}`\r\n    }else currentDate = `${defDate.yyyy}-${defDate.mm}-${defDate.dd}`\r\n\r\n    const body = {\r\n      date : currentDate,\r\n      day: day,\r\n      depot: place,\r\n      dutyHrs: {\r\n        from : from,\r\n        to : to\r\n      }\r\n    }\r\n    console.log(body.date)\r\n    const handlePlaceChange = evt=> {\r\n      setPlace((evt).target.value)\r\n    }\r\n    \r\n    const hanldeSubmit = async (evt)=> {\r\n      evt.preventDefault()\r\n      enableStaffAndTrain();\r\n      // console.log(evt)\r\n      sendData()\r\n    }\r\n\r\n    const sendData = async ()=> {\r\n      if(!CurrentLog){    //if there is no log present\r\n        await axios\r\n        .post('api/log', body, { headers: { \"x-auth-token\": token}})\r\n        .then (response=> {\r\n          console.log(response.data.logs)\r\n          let array = response.data.logs\r\n          if(array.length === 1 ){ \r\n            console.log(array[0]._id)\r\n            let newLog = array[0]._id\r\n            setCurrentLog(newLog)   \r\n          }\r\n          else {\r\n            console.log(array[array.length-1])\r\n          let newLog = array[array.length-1] \r\n          setCurrentLog(newLog)\r\n        }\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n      }else{     //if log exists already\r\n        await axios\r\n        .post(`api/log/${CurrentLog}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log('resp')\r\n          console.log(response)\r\n          console.log('resp')\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n      }\r\n    }\r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <span className={classes.formTitle}>Create New Log</span>\r\n            <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={(evt)=>hanldeSubmit(evt)}> \r\n              <div className={classes.formArea}>\r\n                <div>\r\n                  <span>Date</span> \r\n                  <TextField\r\n                    type= 'date'\r\n                    value={body.date}\r\n                    // defaultValue=\"2017-05-24\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    className={classes.headerInputs}\r\n                    // id=\"date\"\r\n                    name=\"date\"\r\n                    autoComplete=\"date\"\r\n                    onClick={()=> console.log(typeof(body.date))}\r\n                    // onChange={evt=> setToday(evt.target.value)}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div style={{position: 'relative'}}>\r\n                  <span>Day</span> \r\n                  <TextField\r\n                    defaultValue={defDate.day}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    className={classes.headerInputs}\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    autoComplete=\"date\"\r\n                    // onChange={evt=> setToday(evt.target.value)}/\r\n                    disabled\r\n                  />\r\n                </div>\r\n                \r\n                <div> \r\n                  <span>Place</span> \r\n                  <div className={classes.headerInputs}>\r\n                    <Select\r\n                      id=\"demo-customized-select\"\r\n                      onChange={handlePlaceChange}\r\n                      value={place}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={Place[0]}>GCMC</MenuItem>\r\n                      <MenuItem value={Place[1]}>Old Washing Siding</MenuItem>\r\n                      <MenuItem value={Place[2]}>New Washing Siding</MenuItem>\r\n                    </Select>\r\n                  </div>  \r\n                </div>\r\n                <div className={classes.timeDiv}>\r\n                  <span>Duty Hours</span>\r\n                    <span className={classes.dutyHours}>\r\n                      <TextField\r\n                      type= 'time'\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      value = {from}\r\n                      fullWidth\r\n                      className={classes.headerInputs}\r\n                      id=\"from\"\r\n                      name=\"from\"\r\n                      autoComplete=\"from\"\r\n                      onChange={evt=> setFrom(evt.target.value)}\r\n                      autoFocus\r\n                      /> \r\n                      <span>-</span>\r\n                      <TextField\r\n                      type= 'time'\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      value = {to}\r\n                      fullWidth\r\n                      className={classes.headerInputs}\r\n                      id=\"to\"\r\n                      name=\"to\"\r\n                      autoComplete=\"to\"\r\n                      onChange={evt=> setTo(evt.target.value)}\r\n                      autoFocus\r\n                    />\r\n                    </span>\r\n                </div>\r\n              </div>\r\n              <Button variant=\"outlined\" onClick={handleClick({ vertical: 'top', horizontal: 'center' })} type='submit' className={classes.submit}>\r\n                Create\r\n              </Button>\r\n            </form>\r\n              <Snackbar \r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={snackBarOpen} \r\n                autoHideDuration={5000} \r\n                onClose={handleClose}\r\n                style={{width: '350px', marginTop: '55px'}}\r\n                key={vertical + horizontal}\r\n                >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  New Log Created! Please Continue with staff positions and adding trains.\r\n                </Alert>\r\n              </Snackbar>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Coach.js",["202"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CoachRow from './CoachRow'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n  }\r\n}))\r\n\r\nconst CoachTable = (props)=> {\r\n  const { load, currentLog, trainId, addSickCoach } = props;\r\n  // console.log(currentLog)\r\n  // console.log('table')\r\n  // console.log(trainId)\r\n  const classes = useStyles();\r\n  const tableHeads = ['Serial No','Owning Railway', 'Painted Number', 'Coach Code', \r\n  'Mech Code', 'Return Date', 'POH Station', 'POH Date',\r\n  'IOH Station', 'IOH Date', 'Angle Cock', 'Upload/Sick'],\r\n  \r\n  displayTableHeads = ()=> {\r\n  const array = [];\r\n  \r\n  tableHeads.map(cell=> {\r\n    array.push(\r\n      <TableCell >{cell}</TableCell>\r\n    )\r\n  })\r\n  return array;\r\n  },\r\n\r\n  displayRows = ()=> {\r\n    const array = []\r\n    for(let i=0; i<load; i++){\r\n      array.push(<CoachRow key={i+1} serialNo={i+1} currentLog={currentLog} trainId={trainId} addSickCoach={addSickCoach}/>)\r\n    }\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            {\r\n              displayTableHeads()\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tableBody}>\r\n          {\r\n            displayRows()\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nexport default CoachTable\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useContext } from 'react'\r\n// import UserContext from '../../context/UserContext' \r\n// import ProfileContext from '../../context/ProfileContext' \r\n// import CurrentLogContext from '../../context/CurrentLogContext'\r\n// import CurrentTrainContext from '../../context/CurrentTrainContext'\r\n// import axios from 'axios'\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import AntWitch from './AntSwitch'\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root:{\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       margin: theme.spacing(2),\r\n//       padding: theme.spacing(3)\r\n//     },\r\n//     form: {\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'space-around', \r\n//       flexWrap: 'wrap',\r\n//       '& > *': {\r\n//         margin: theme.spacing(1),\r\n//         width: '25ch',\r\n//       },\r\n//     },\r\n//     formation:{\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'space-around', \r\n//     },\r\n//     protectionOfRake:{\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'space-around',\r\n//     },\r\n//     pressure:{\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'space-around',\r\n//     }\r\n//   }));\r\n// const Coach = (props) => {\r\n// const classes = useStyles(),\r\n//     { params } =props,\r\n//     { CurrentLog, setCurrentLog} = useContext(CurrentLogContext),\r\n//     { CurrentTrain, setCurrentTrain} = useContext(CurrentTrainContext),\r\n//     { userData, setUserData } = useContext(UserContext),\r\n//     token = userData.token\r\n//     const idNameAuto = ['owningRailway', 'coachCode', 'mechCode', 'angleCock', 'underGearWorks', 'pipeLineWorks', 'carpentryWorks', 'airBrakeWorks']\r\n//     const label =['Owning Railway', 'Coach Code', 'Mech Code', 'Angle Cock', 'Under Gear Works', 'PipeLine Works', 'Carpentry Works', 'Air Brake Works']\r\n//     const iohPoh = ['station', 'date']\r\n//     const date = new Date(),\r\n//         defDate = {\r\n//             dd : date.getDate(),\r\n//             mm : date.getMonth(),\r\n//             yyyy:date.getFullYear(),\r\n//           }\r\n\r\n//     const [CoachData, setCoachData] = useState({\r\n//         owningRailway : 'CR',\r\n//         coachNo : 1234,\r\n//         coachCode : 'ACCN',\r\n//         mechCode : '123a',\r\n//         returnDate : '2020-12-12',\r\n//         angleCock : 'open',\r\n//         underGearWorks : 'new brake blocks fitted',\r\n//         pipeLineWorks : 'blah blah blah',\r\n//         carpentryWorks : 'some works attened',\r\n//         airBrakeWorks : 'asdfghjkl, zxcvbnm',\r\n//     })\r\n//     const [POH, setPOH] = useState({\r\n//         station: 'MTN',\r\n//         date: '2020-01-12'\r\n//     })\r\n//     const [IOH, setIOH] = useState({\r\n//         station: 'PA',\r\n//         date: '2020-09-12'\r\n//     })\r\n//     const body = {\r\n//         ...CoachData,\r\n//         poh : POH,\r\n//         ioh: IOH\r\n//     }\r\n//     const handleCoachDataChange = (evt)=> {\r\n//         const value = evt.target.value;\r\n//         setCoachData({\r\n//           ...CoachData,\r\n//           [evt.target.name]: value\r\n//         });\r\n//     }  \r\n//     const handlePOHChange = (evt)=> {\r\n//         const value = evt.target.value;\r\n//         setPOH({\r\n//           ...POH,\r\n//           [evt.target.name]: value\r\n//         });\r\n//     }\r\n//     const handleIOHChange = (evt)=> {\r\n//         const value = evt.target.value;\r\n//         setIOH({\r\n//           ...IOH,\r\n//           [evt.target.name]: value\r\n//         });\r\n//     },\r\n    \r\n//     SubmitCoach = async (evt)=> {\r\n//         evt.preventDefault()\r\n//         sendCoachData()\r\n//     },\r\n//     sendCoachData = async ()=> {\r\n//          //considering log exists already\r\n//          console.log(JSON.stringify(body))\r\n//         await axios\r\n//         ///api/log/coach/:logId/:trainId\r\n//         .post(`api/log/coach/${CurrentLog}/${CurrentTrain}`, body, { headers: { \"x-auth-token\": token}})\r\n//         .then(response=> {\r\n//           console.log(response)\r\n//         })\r\n//         .catch(error=> {\r\n//           console.log(error)\r\n//         })\r\n//     }\r\n//     const evalVariable = (stateName, val)=> {\r\n//         let object = stateName,\r\n//             dot = '.',\r\n//             method = `${val}`,\r\n//             wholeString = object + dot + method;\r\n//         return(eval(wholeString)) \r\n//         // console.log(wholeString)\r\n//     }\r\n\r\n//     const coachDataDivs = ()=> { \r\n//         let coachDataDiv=[]\r\n//         for(let i=0; i<label.length; i++){\r\n//             coachDataDiv.push(\r\n//                 <div>\r\n//                     <TextField\r\n//                     variant=\"outlined\"\r\n//                     margin=\"normal\"\r\n//                     value={evalVariable('CoachData', idNameAuto[i])}\r\n//                     fullWidth\r\n//                     label= {label[i]}\r\n//                     id={idNameAuto[i]}\r\n//                     name={idNameAuto[i]}\r\n//                     autoComplete={idNameAuto[i]}\r\n//                     onChange={evt=>handleCoachDataChange(evt)}\r\n//                     />\r\n//                 </div>\r\n//             )\r\n//         }\r\n//         return coachDataDiv\r\n//     }\r\n//     const ioh_poh = ()=> {\r\n//         const   name = ['IOH', 'POH']\r\n        \r\n//         let arr = []\r\n//         for(let i=0; i<name.length; i++){\r\n//             let element = name[i]\r\n//             console.log(element)\r\n//             console.log(iohPoh[i])\r\n//             arr.push(\r\n//                 <Paper>\r\n//                     <span>{name[i]}</span>\r\n                    \r\n//                     <TextField\r\n//                     variant=\"outlined\"\r\n//                     margin=\"normal\"\r\n//                     value={evalVariable(`${element}`, 'station')}\r\n//                     fullWidth\r\n//                     label= 'Station'\r\n//                     id={'station'}\r\n//                     name={'station'}\r\n//                     autoComplete={'station'}\r\n//                     onChange={evt=>{\r\n//                         if(name[i]==='IOH'){ \r\n//                             handleIOHChange(evt)\r\n//                         }else handlePOHChange(evt)\r\n//                     }\r\n//                     }\r\n//                     />\r\n//                     <TextField\r\n//                     type= 'date'\r\n//                     defaultValue={`${defDate.yyyy}-${defDate.mm}-${defDate.dd}`}\r\n//                     variant=\"outlined\"\r\n//                     margin=\"normal\"\r\n//                     value={evalVariable(`${element}`, 'date')}\r\n//                     fullWidth\r\n//                     label='Date'\r\n//                     id={'date'}\r\n//                     name={'date'}\r\n//                     autoComplete={'date'}\r\n//                     onChange={evt=>{\r\n//                         if(name[i]==='IOH'){ \r\n//                             handleIOHChange(evt)\r\n//                         }else handlePOHChange(evt)\r\n//                     }\r\n//                     }\r\n//                     />\r\n//                 </Paper>\r\n//             )\r\n//         }\r\n//         return arr\r\n//     }\r\n    \r\n//     console.log(params)\r\n    \r\n//     return (\r\n//         <Paper elevation={3} className={classes.root}>\r\n//             <h1>Coach</h1>\r\n//             <form className={classes.form} onSubmit={(evt)=>SubmitCoach(evt)}>\r\n//                 <div>\r\n//                     <TextField\r\n//                     type='number'\r\n//                     variant=\"outlined\"\r\n//                     margin=\"normal\"\r\n//                     value={CoachData.coachNo}\r\n//                     fullWidth\r\n//                     label= 'Coach No'\r\n//                     id='coachNo'\r\n//                     name='coachNo'\r\n//                     autoComplete='coachNo'\r\n//                     onChange={evt=>handleCoachDataChange(evt)}\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <TextField\r\n//                     type= 'date'\r\n//                     defaultValue={`${defDate.yyyy}-${defDate.mm}-${defDate.dd}`}\r\n//                     variant=\"outlined\"\r\n//                     margin=\"normal\"\r\n//                     value={CoachData.returnDate}\r\n//                     fullWidth\r\n//                     label='Return Date'\r\n//                     id=\"returnDate\"\r\n//                     name=\"returnDate\"\r\n//                     autoComplete=\"returnDate\"\r\n//                     onChange={evt=>handleCoachDataChange(evt)}\r\n//                     />\r\n//                 </div>\r\n//                 {coachDataDivs()}\r\n//                 {ioh_poh()}\r\n//                 <button type='submit'>Save</button>\r\n//             </form>\r\n//         </Paper>\r\n//     )\r\n// }\r\n\r\n// export default Coach\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Staff.js",["203","204","205"],"import React, { useState, useContext } from 'react'\r\nimport UserContext from '../../context/UserContext'  \r\nimport CurrentLogContext from '../../context/CurrentLogContext'\r\nimport axios from 'axios'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from './logFormStyles'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  } \r\n\r\nconst Staff = (props) => {\r\nconst classes = useStyles(),\r\n    { CurrentLog, setCurrentLog} = useContext(CurrentLogContext),\r\n    { userData, setUserData } = useContext(UserContext),\r\n    token = userData.token,\r\n    worksArray = ['Undergear' , 'Air Brake Testing', 'Pipe Fitting', 'Carpentry', 'DPO and SBO', 'Other Works'],\r\n    totalSacntionedStrength = ['On Roll', 'Present', 'Under Rest', 'On Leave', 'Absent', 'Sick'],\r\n    strength = ['onRoll', 'physicallyPresent', 'underRest', 'onLeave', 'absent', 'sick'],\r\n    idNameAuto = ['Undergear' , 'Testing', 'PipeFitting', 'Carpentry', 'DPOandSBO', 'OtherWorks'],\r\n    idNameAuto2= ['onRoll', 'physicallyPresent', 'underRest', 'onLeave', 'absent', 'sick'],\r\n\r\n    \r\n    [snackbarState, setsnackbarState] = React.useState({\r\n      snackBarOpen: false,\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }),\r\n    { snackBarOpen, vertical, horizontal } = snackbarState,\r\n\r\n    handleClick = (newState) => () => {\r\n      setsnackbarState({ snackBarOpen: true, vertical: 'top', horizontal: 'center'});  \r\n    },\r\n\r\n    handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setsnackbarState({ ...snackbarState, snackBarOpen: false });\r\n    },\r\n\r\n    [Works, setWorks] = useState({\r\n        Undergear : 'Billy, Mandy',\r\n        Testing : 'Rachel, Monica, Pheobe',\r\n        PipeFitting : 'Ross, Chandler, Joey',\r\n        Carpentry : 'Rick, Morty',\r\n        DPOandSBO : 'Walter, Jesse',\r\n        OtherWorks : 'Robin',\r\n    }),\r\n    \r\n    [Strength, setStrength] = useState({\r\n        onRoll : 15,\r\n        physicallyPresent : 11,\r\n        underRest : 1,\r\n        onLeave : 1,\r\n        absent : 1,\r\n        sick : 1,\r\n    }),\r\n\r\n    body = {\r\n        underGear: Works.Undergear,\r\n        brakePower: Works.Testing,\r\n        pipeFitting: Works.PipeFitting,\r\n        carpentry: Works.Carpentry,\r\n        oiling: Works.DPOandSBO,\r\n        otherWorks: Works.OtherWorks,\r\n        totalSacntionedStrength: Strength\r\n    },\r\n\r\n    handleWorksChange = (evt)=> {\r\n        const value = evt.target.value;\r\n        setWorks({\r\n          ...Works,\r\n          [evt.target.name]: value\r\n        });\r\n      },\r\n\r\n    handleStrngthChange = (evt)=> {\r\n      const value = evt.target.value;\r\n      setStrength({\r\n        ...Strength,\r\n        [evt.target.name]: value\r\n      });\r\n    },\r\n\r\n    hanldeSubmit = async (evt)=> {\r\n        evt.preventDefault()\r\n        console.log('clickedddd')\r\n        sendData()\r\n    },\r\n    sendData = async ()=> {\r\n         //considering log exists already\r\n        //  console.log(body)\r\n        await axios\r\n        .post(`api/staff/${CurrentLog}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log(response)\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n        \r\n    },\r\n    \r\n    evalVariable = (stateName, val)=> {\r\n        let object = stateName,\r\n            dot = '.',\r\n            method = `${val}`,\r\n            wholeString = object + dot + method;\r\n        return(eval(wholeString)) \r\n        // console.log(object)\r\n    },\r\n\r\n    workDivs = ()=> { \r\n        let worksDiv=[]\r\n        \r\n        for(let i=0; i<worksArray.length; i++){\r\n            // evalVariable(idNameAuto[i]);\r\n            worksDiv.push(<div>\r\n                {worksArray[i]}\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                value={evalVariable('Works', idNameAuto[i])}\r\n                fullWidth\r\n                // label= {worksArray[i]}\r\n                id={idNameAuto[i]}\r\n                name={idNameAuto[i]}\r\n                autoComplete={idNameAuto[i]}\r\n                onChange={evt=>handleWorksChange(evt)}\r\n                />\r\n            </div>)\r\n        }\r\n        return worksDiv\r\n    },\r\n    strengthDivs = ()=> { \r\n        let stringthDiv=[]\r\n        \r\n        for(let i=0; i<worksArray.length; i++){\r\n            stringthDiv.push(<div>\r\n                {totalSacntionedStrength[i]}\r\n                <TextField\r\n                type='number'\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                value={evalVariable('Strength',strength[i])}\r\n                fullWidth\r\n                // label= {totalSacntionedStrength[i]}\r\n                id={idNameAuto2[i]}\r\n                name={idNameAuto2[i]}\r\n                autoComplete={idNameAuto2[i]}\r\n                onChange={evt=>handleStrngthChange(evt)}\r\n                />\r\n            </div>)\r\n        }\r\n        return stringthDiv\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Paper elevation={3} className={classes.staffRoot}>\r\n            <span className={classes.formTitle}>Staff Position and Strength</span>\r\n            <form className={classes.form} onSubmit={(evt)=>hanldeSubmit(evt)}>\r\n                <div className={classes.staffFormArea}>\r\n                    <div className={classes.names}>\r\n                        {/* <span>Names</span> */}\r\n                        {workDivs()}\r\n                    </div>\r\n                    <hr className={classes.hr}/>\r\n                    <span style={{width: '100%', fontSize: '1.2rem',}}>Total Sanctioned Strength</span>\r\n                    <div className={classes.strength}>\r\n                        {strengthDivs()}\r\n                    </div>\r\n                </div>\r\n                <Button type='submit' onClick={handleClick()} className={classes.submit}>Save</Button>\r\n            </form>\r\n              <Snackbar \r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={snackBarOpen} \r\n                autoHideDuration={2000} \r\n                onClose={handleClose}\r\n                style={{width: '350px', marginTop: '55px'}}\r\n                key={vertical + horizontal}\r\n                >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Staff Info Saved!\r\n                </Alert>\r\n              </Snackbar>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Staff\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Trains.js",["206","207","208","209","210","211","212"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UserContext from '../../context/UserContext' \r\nimport Train from './Train'\r\nimport CurrentLogContext from '../../context/CurrentLogContext'\r\nimport CurrentTrainContext from '../../context/CurrentTrainContext'\r\nimport axios from 'axios'\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nimport useStyles from '../../styles/trainFormStyles'\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  } \r\n\r\nconst Trains = () => {\r\nconst classes = useStyles(),\r\n    { CurrentLog, setCurrentLog} = useContext(CurrentLogContext),\r\n    { userData, setUserData } = useContext(UserContext),\r\n    { CurrentTrain, setCurrentTrain} = useContext(CurrentTrainContext),\r\n    [AllTrains, setAllTrains] = useState([]),\r\n    [toggleFetchIcon, settoggleFetchIcon] = useState('none'),\r\n    [IsAllTrainDataFound, setIsAllTrainDataFound] = useState(false),\r\n    token = userData.token,\r\n    [TrainData, setTrainData] = useState({\r\n        trainNo : 1234,\r\n        trainName : 'Special Train 1',\r\n        load: 5,\r\n        timeUnfitMemoIssued : '12:00',\r\n        timeReplacementProvided : '13:00',\r\n        brakeType : 'Air',\r\n        remarks: 'Wheel Defects'\r\n    }),\r\n    [formation, setFormation] = useState({\r\n        memoNo: '1',\r\n        timeRecieved: '11:00',\r\n        pitlineNo: 1\r\n    }),\r\n    [protectionOfRake, setProtectionOfRake] = useState({\r\n        lineBlockingTime : \"12:00\",\r\n        lineReleaseTime : \"12:00\",\r\n    }),\r\n    [pressure, setPressure] = useState({\r\n        FPfront : '6.0 kg/cm2',\r\n        FPrear : '5.8 kg/cm2',\r\n        BPfront : '5.0 kg/cm2',\r\n        BPrear : '4.8 kg/cm2',\r\n    }),\r\n    [toggleWashing, setToggleWashing] = useState(false),\r\n    [washingAndCleaningWorks, setWashingAndCleaningWorks] = useState({\r\n        internalCleaning: true,\r\n        externalCleaning: false,\r\n        lavatoryFloorCleaning: false,\r\n        disinfectionOfLavatory: false,\r\n        pestControl: false,\r\n    }),\r\n\r\n    body = {\r\n        trainNo :TrainData.trainNo,\r\n        trainName: TrainData.trainName,\r\n        formation: {\r\n            memoNo: formation.memoNo,\r\n            timeRecieved: formation.timeRecieved,\r\n            pitlineNo: formation.pitlineNo\r\n        },\r\n        load: TrainData.load,\r\n        protectionOfRake: {\r\n            lineBlockingTime: protectionOfRake.lineBlockingTime,\r\n            lineReleaseTime: protectionOfRake.lineReleaseTime,\r\n        },\r\n        timeUnfitMemoIssued: TrainData.timeUnfitMemoIssued,\r\n        timeReplacementProvided: TrainData.timeReplacementProvided,\r\n        brakeType: TrainData.brakeType,\r\n        pressure: {\r\n            fp: {\r\n                front:pressure.FPfront,\r\n                rear:pressure.FPrear\r\n            },\r\n            bp: {\r\n                front: pressure.BPfront,\r\n                rear: pressure.BPrear\r\n            }\r\n        },\r\n        washingAndCleaning: {\r\n            checkBox: toggleWashing,\r\n            internalCleaning: washingAndCleaningWorks.internalCleaning,\r\n            externalCleaning: washingAndCleaningWorks.externalCleaning,\r\n            lavatoryFloorCleaning: washingAndCleaningWorks.lavatoryFloorCleaning,\r\n            disinfectionOfLavatory: washingAndCleaningWorks.disinfectionOfLavatory,\r\n            pestControl: washingAndCleaningWorks.pestControl,\r\n        },\r\n        remarks: TrainData.remarks\r\n    },\r\n\r\n    [open, setOpen] = useState(false),\r\n\r\n    handleClick = () => {\r\n      setOpen(true);\r\n    },\r\n\r\n    handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n\r\n      setOpen(false);\r\n    },\r\n    \r\n    handleTrainDataChange = (evt)=> {\r\n        setTrainData({\r\n          ...TrainData,\r\n          [evt.target.name]: evt.target.value\r\n        });\r\n      },\r\n    handleFormationChange = (evt)=> {\r\n        setFormation({\r\n            ...formation,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    },\r\n    handleProtectionOfRakeChange = (evt)=> {\r\n        setProtectionOfRake({\r\n            ...protectionOfRake,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    },\r\n    handlePressureChange = (evt)=> {\r\n        setPressure({\r\n            ...pressure,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }, \r\n    handleToggleWashing = ()=> {\r\n        setToggleWashing(!toggleWashing)\r\n        setWashingAndCleaningWorks({\r\n            internalCleaning: false,\r\n            externalCleaning: false,\r\n            lavatoryFloorCleaning: false,\r\n            disinfectionOfLavatory: false,\r\n            pestControl: false,\r\n        })\r\n    },\r\n    handleWashingWorks = (evt) => {\r\n\r\n        setWashingAndCleaningWorks({\r\n            ...washingAndCleaningWorks,\r\n            [evt.target.name]: !(evalVariable('washingAndCleaningWorks', evt.target.name))\r\n        })\r\n    },\r\n\r\n    fetchLogData = async ()=> {\r\n        let response = await axios.get(`/api/log/${CurrentLog}`,{ headers: { \"x-auth-token\": token}})\r\n        console.log(response.data.trains)\r\n        setAllTrains([...response.data.trains])\r\n        setIsAllTrainDataFound(true)\r\n    },\r\n    editAlltrains = async (newArray)=> {\r\n        setAllTrains([...newArray])\r\n        if(AllTrains.length === 0 ) {setIsAllTrainDataFound(false)}\r\n    },\r\n    displayTrains = ()=> {\r\n        const trainArray =[]\r\n        // eslint-disable-next-line array-callback-return\r\n        if(AllTrains.length>0){\r\n            AllTrains.map(train=> {\r\n                trainArray.push(\r\n                    <div className={classes.trainNdeleteButton}>\r\n                    <Train data = {train} formButtons={true} \r\n                    collection={AllTrains} itemID={train._id} \r\n                    changeCollectionSate={editAlltrains} token={token}\r\n                    currentLog ={CurrentLog} \r\n                    />\r\n                    </div>\r\n                )\r\n            })\r\n            return trainArray;\r\n        } else return <></>\r\n    },\r\n    evalVariable = (stateName, val)=> {\r\n        let object = stateName,\r\n            dot = '.',\r\n            method = `${val}`,\r\n            wholeString = object + dot + method;\r\n        return(eval(wholeString)) \r\n        // console.log(eval(wholeString))\r\n    }, \r\n    displayWashing = ()=> {\r\n        const works = ['internalCleaning', 'externalCleaning', \r\n                        'lavatoryFloorCleaning', 'disinfectionOfLavatory', 'pestControl']\r\n        const worksNames = ['Internal Cleaning', 'External Cleaning', \r\n                        'Lavatory Floor Cleaning', 'Disinfection Of Lavatory', 'Pest Control']\r\n        let array = []\r\n        if(toggleWashing){\r\n            for(let i = 0; i < works.length; i++){\r\n                array.push(\r\n                    <span>\r\n                        <span>{worksNames[i]}</span>\r\n                        <Checkbox\r\n                            checked={evalVariable('washingAndCleaningWorks', works[i])}\r\n                            name= {works[i]}\r\n                            onChange={(evt)=> handleWashingWorks(evt)}\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        />\r\n                    </span>\r\n                )\r\n                // console.log(array);\r\n            }\r\n            return array\r\n        }\r\n    },\r\n    \r\n\r\n    SubmitTrain = async (evt)=> {\r\n        evt.preventDefault()\r\n        console.log('clicked')\r\n        settoggleFetchIcon('block')\r\n        window.scrollTo(0,0)\r\n        await sendData()\r\n        await fetchLogData();\r\n        settoggleFetchIcon('none')\r\n    },\r\n\r\n    sendData = async ()=> {\r\n         //considering log exists already\r\n         console.log(JSON.stringify(body))\r\n        await axios\r\n        .post(`/api/log/train/${CurrentLog}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n            console.log(response.data._id)\r\n            console.log('Train called too!')\r\n            let newTrain = response.data._id\r\n            setCurrentTrain(newTrain)\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n          console.log(CurrentLog)\r\n        })\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n    // <Container>\r\n        <div className={classes.root} >\r\n        <Paper elevation={3} className={classes.formPaper} onSubmit={(evt)=>SubmitTrain(evt)}>\r\n            <span className={classes.formTitle}>Add New Train</span>\r\n            <form className={classes.form}>\r\n                <div className={classes.formArea}>\r\n                <div style={{maxWidth:'211px'}}>\r\n                    <TextField\r\n                    type= 'number'\r\n                    variant=\"outlined\"\r\n                    value= {TrainData.trainNo}\r\n                    margin=\"normal\"\r\n                    // fullWidth\r\n                    label= 'Train No'\r\n                    id=\"trainNo\"\r\n                    name=\"trainNo\"\r\n                    autoComplete=\"trainNo\"\r\n                    onChange={evt=>handleTrainDataChange(evt)}\r\n                    className={classes.boxes}\r\n                    />\r\n                </div>\r\n                <div style={{maxWidth:'211px'}}>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    value= {TrainData.trainName}\r\n                    // fullWidth\r\n                    label= 'Train Name'\r\n                    id=\"trainName\"\r\n                    name=\"trainName\"\r\n                    autoComplete=\"trainName\"\r\n                    onChange={evt=>handleTrainDataChange(evt)}\r\n                    className={classes.boxes}\r\n                    />\r\n                </div>\r\n            \r\n                <div style={{maxWidth:'211px'}}>\r\n                    \r\n                    <TextField\r\n                    type= 'number'\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    value= {TrainData.load}\r\n                    // fullWidth\r\n                    label= 'Load'\r\n                    id=\"load\"\r\n                    name=\"load\"\r\n                    autoComplete=\"load\"\r\n                    onChange={evt=>handleTrainDataChange(evt)}\r\n                    className={classes.boxes}\r\n                    />\r\n                </div>\r\n                \r\n                <div className={classes.brakeType}>\r\n                    <span>Brake Type</span>\r\n                    <Select\r\n                        name=\"brakeType\"\r\n                        id=\"demo-customized-select\"\r\n                        onChange={evt=>handleTrainDataChange(evt)}\r\n                        value={TrainData.brakeType}\r\n                        className={classes.boxes}\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'Air'}>Air</MenuItem>\r\n                        <MenuItem value={'Vaccum'}>Vaccum</MenuItem>\r\n                    </Select>\r\n                </div>\r\n\r\n                <div className={classes.protectionOfRake}>\r\n                    <div className={classes.boxLabels}>Protection Of Rake</div>\r\n                    <span>\r\n                    <span>\r\n                        {/* <p className={classes.innerLabels}>Line Blocking Time </p> */}\r\n                        <TextField\r\n                        type= 'time'\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value={protectionOfRake.lineBlockingTime}\r\n                        label='Line Blocking Time'\r\n                        required\r\n                        // value = {from}\r\n                        // fullWidth\r\n                        id=\"lineBlockingTime\"\r\n                        name=\"lineBlockingTime\"\r\n                        autoComplete=\"lineBlockingTime\"\r\n                        onChange={evt=>handleProtectionOfRakeChange(evt)}\r\n                        className={classes.boxes}\r\n                        style={{maxWidth:'30ch', width:'150px'}}\r\n                        autoFocus\r\n                        /> \r\n                    </span>\r\n                    <span>\r\n                        {/* <p className={classes.innerLabels}>Line Release Time </p> */}\r\n                        <TextField\r\n                        type= 'time'\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value={protectionOfRake.lineReleaseTime}\r\n                        label='Line Release Time'\r\n                        required\r\n                        // value = {from}\r\n                        // fullWidth\r\n                        id=\"lineReleaseTime\"\r\n                        name=\"lineReleaseTime\"\r\n                        autoComplete=\"lineReleaseTime\"\r\n                        onChange={evt=>handleProtectionOfRakeChange(evt)}\r\n                        className={classes.boxes}\r\n                        style={{maxWidth:'30ch', width:'150px'}}\r\n                        autoFocus\r\n                        /> \r\n                    </span>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={classes.formation}>\r\n                    <span className={classes.boxLabels}>Formation</span>\r\n                    <span>\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value= {formation.memoNo}\r\n                        // fullWidth\r\n                        label= 'Memo No'\r\n                        id=\"memoNo\"\r\n                        name=\"memoNo\"\r\n                        autoComplete=\"memoNo\"\r\n                        onChange={evt=>handleFormationChange(evt)}\r\n                        className={classes.boxes}\r\n                        />\r\n                        \r\n                        <TextField\r\n                        type= 'time'\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value= {formation.timeRecieved}\r\n                        label= 'Time Recieved'\r\n                        required\r\n                        // value = {from}\r\n                        // fullWidth\r\n                        id=\"timeRecieved\"\r\n                        name=\"timeRecieved\"\r\n                        autoComplete=\"timeRecieved\"\r\n                        onChange={evt=>handleFormationChange(evt)}\r\n                        className={classes.boxes}\r\n                        autoFocus\r\n                        /> \r\n                        <div className={classes.boxGroup}>\r\n                        <span>Pit-Line No</span>\r\n                        <Select\r\n                            name=\"pitlineNo\"\r\n                            id=\"demo-customized-select\"\r\n                            onChange={evt=>handleFormationChange(evt)}\r\n                            className={classes.boxes}\r\n                            value= {formation.pitlineNo}\r\n                            >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            <MenuItem value={1}>1</MenuItem>\r\n                            <MenuItem value={2}>2</MenuItem>\r\n                            <MenuItem value={3}>3</MenuItem>\r\n                            <MenuItem value={4}>4</MenuItem>\r\n                            <MenuItem value={5}>5</MenuItem>\r\n                        </Select>\r\n                        </div> \r\n                    </span>\r\n                </div>\r\n                <div className={classes.sick}>\r\n                    <span className={classes.boxLabels}>{`Sick Coach (if any)`}</span>\r\n                    <span>\r\n                        <div>\r\n                            <TextField\r\n                            type= 'time'\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={TrainData.timeUnfitMemoIssued}\r\n                            label= 'Time Un-Fit Memo Issued'\r\n                            fullWidth\r\n                            id=\"timeUnfitMemoIssued\"\r\n                            name=\"timeUnfitMemoIssued\"\r\n                            autoComplete=\"timeUnfitMemoIssued\"\r\n                            onChange={evt=>handleTrainDataChange(evt)}\r\n                            className={classes.boxes}\r\n                            autoFocus\r\n                            style={{maxWidth:'30ch', width:'150px'}}\r\n                            /> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <TextField\r\n                            type= 'time'\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={TrainData.timeReplacementProvided}\r\n                            label= 'Time Replacement Provided'\r\n                            fullWidth\r\n                            id=\"timeReplacementProvided\"\r\n                            name=\"timeReplacementProvided\"\r\n                            autoComplete=\"timeReplacementProvided\"\r\n                            onChange={evt=>handleTrainDataChange(evt)}\r\n                            className={classes.boxes}\r\n                            autoFocus\r\n                            style={{maxWidth:'30ch', width:'150px'}}\r\n                            /> \r\n                        </div>\r\n\r\n                        <div>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                value={TrainData.remarks}\r\n                                // fullWidth\r\n                                label= 'Remarks'\r\n                                id=\"remarks\"\r\n                                name=\"remarks\"\r\n                                autoComplete=\"remarks\"\r\n                                onChange={evt=>handleTrainDataChange(evt)}\r\n                                className={classes.boxes}\r\n                                style={{maxWidth:'30ch', width:'150px'}}\r\n                                />\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                \r\n                <div className={classes.pressure}>\r\n                    <span className={classes.boxLabels}>Pressure</span>\r\n                    <span>\r\n                        <span className={classes.boxGroup}>\r\n                            <span>Feed Pipe</span>\r\n                            <span>\r\n                            <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={pressure.FPfront}\r\n                            // fullWidth\r\n                            label= 'Front'\r\n                            id=\"FPfront\"\r\n                            name=\"FPfront\"\r\n                            autoComplete=\"FPfront\"\r\n                            onChange={evt=>handlePressureChange(evt)}\r\n                            className={classes.boxes}\r\n                            />\r\n                            <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={pressure.FPrear}\r\n                            // fullWidth\r\n                            label= 'Rear'\r\n                            id=\"FPrear\"\r\n                            name=\"FPrear\"\r\n                            autoComplete=\"FPrear\"\r\n                            onChange={evt=>handlePressureChange(evt)}\r\n                            className={classes.boxes}\r\n                            />\r\n                            </span>\r\n                        </span>\r\n                        <span className={classes.boxGroup}>\r\n                        <span>Brake Pipe</span>\r\n                        <span>\r\n                            <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={pressure.BPfront}\r\n                            // fullWidth\r\n                            label= 'Front'\r\n                            id=\"BPfront\"\r\n                            name=\"BPfront\"\r\n                            autoComplete=\"BPfront\"\r\n                            onChange={evt=>handlePressureChange(evt)}\r\n                            className={classes.boxes}\r\n                            />\r\n                            <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            value={pressure.FPrear}\r\n                            // fullWidth\r\n                            label= 'Rear'\r\n                            id=\"BPrear\"\r\n                            name=\"BPrear\"\r\n                            autoComplete=\"BPrear\"\r\n                            onChange={evt=>handlePressureChange(evt)}\r\n                            className={classes.boxes}\r\n                            />\r\n                        </span>\r\n                    </span>\r\n                    </span>\r\n                </div>\r\n                <div className={classes.washing}>\r\n                    <div>\r\n                    <span className={classes.boxLabels}>{`Washing And Cleaning `}</span>\r\n                    <span>\r\n                        <Checkbox\r\n                            checked={toggleWashing}\r\n                            label = 'asas'\r\n                            name= 'checkWash'\r\n                            onChange={handleToggleWashing}\r\n                            // onChange={handleWashingAndCleaning}\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        />\r\n                    </span>\r\n                    </div>\r\n                    {\r\n                        displayWashing()\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n                <Button type='submit' onClick={handleClick} className={classes.submit}>Save</Button>\r\n            </form>\r\n              <Snackbar \r\n                open={open} \r\n                autoHideDuration={5000} \r\n                onClose={handleClose}\r\n                style={{width: '350px'}}\r\n                >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  New Train Created. You can now add Coaches to it.\r\n                </Alert>\r\n              </Snackbar>\r\n        </Paper>\r\n        <div className={classes.AllTrains} style={{}}>\r\n            { IsAllTrainDataFound ? displayTrains() : <></> }\r\n            <div className={classes.fetchingIcon} style={{display: toggleFetchIcon}}>\r\n                {/* <span>Fetching Train</span> */}\r\n                <LinearProgress />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    // </Container>\r\n    )\r\n}\r\n\r\nexport default Trains\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\SickCoach.js",["213"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport SickCoachRow from './SickCoachRow'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  table: {\r\n    '& * >': {\r\n    },\r\n  },\r\n  addSickCoach:{\r\n    width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n  },\r\n  paperSickTitle:{\r\n      fontSize: '1.5rem',\r\n      borderBottom: '1px solid #d4d4d4',\r\n      width: '75%',\r\n  },\r\n  addSickCoachButton:{\r\n      width: '25%',\r\n      [theme.breakpoints.up('sm')]: {\r\n          width: '10%'\r\n      },\r\n  },\r\n}))\r\n\r\nconst SickCoachTable = (props)=> {\r\n  const { currentLog, trainId } = props;\r\n  console.log(currentLog)\r\n  const [NoOfSickCoaches, setNoOfSickCoaches] = useState(0)\r\n  // console.log(currentLog)\r\n  // console.log('table')\r\n  // console.log(trainId)\r\n  const classes = useStyles();\r\n  const tableHeads = ['Serial No','Owning Railway', 'Painted Number', 'Coach Code', \r\n  'Return Date', 'POH Station', 'POH Date',\r\n  'IOH Station', 'IOH Date', 'Description'],\r\n  \r\n  displayTableHeads = ()=> {\r\n  const array = [];\r\n  \r\n  tableHeads.map(cell=> {\r\n    array.push(\r\n      <TableCell >{cell}</TableCell>\r\n    )\r\n  })\r\n  return array;\r\n  },\r\n\r\n  addSickCoach = ()=> {\r\n    setNoOfSickCoaches(NoOfSickCoaches + 1)\r\n    console.log(NoOfSickCoaches)\r\n  },\r\n\r\n  displayRows = ()=> {\r\n    const array = []\r\n\r\n    for( let i=0; i<NoOfSickCoaches; i++){\r\n      array.push(<SickCoachRow key={i+1} serialNo={i+1} currentLog={currentLog} trainId={trainId}/>)\r\n    }\r\n    return array\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.addSickCoach}>\r\n          <span  className={classes.paperSickTitle}>Sick Coaches</span>\r\n          <Button \r\n              color='primary' \r\n              variant=\"contained\" \r\n              className={classes.addSickCoachButton}\r\n              onClick={()=> addSickCoach()}\r\n          >\r\n              <AddIcon />\r\n          </Button>\r\n      </div>\r\n      {\r\n        NoOfSickCoaches > 0 ?\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\" className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {\r\n                  displayTableHeads()\r\n                }\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody className={classes.tableBody}>\r\n                {\r\n                  displayRows()\r\n                }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> \r\n        :\r\n        <span style={{marginLeft: 'auto', marginRight: 'auto'}}>No Sick Coach Added</span>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nexport default SickCoachTable","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\AntSwitch.js",["214","215"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    '&$checked': {\r\n      transform: 'translateX(12px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: 'none',\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitches() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Vaccum</Grid>\r\n          <Grid item>\r\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\r\n          </Grid>\r\n          <Grid item>Air</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </FormGroup>\r\n  );\r\n}","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Header.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Staff.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Coach.js",[],["233","234"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\SickCoach.js",["235"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport SickCoachRow from './SickCoachRow'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    '& * >': {\r\n    },\r\n  }\r\n}))\r\n\r\nconst SickCoachTable = (props)=> {\r\n  const { data } = props;\r\n  // console.log(currentLog)\r\n  // console.log('table')\r\n  console.log(data)\r\n  const classes = useStyles();\r\n  const tableHeads = ['Serial No','Owning Railway', 'Painted Number', 'Coach Code', \r\n  'Return Date', 'POH Station', 'POH Date',\r\n  'IOH Station', 'IOH Date', 'Description'],\r\n  \r\n  displayTableHeads = ()=> {\r\n  const array = [];\r\n  \r\n  tableHeads.map(cell=> {\r\n    array.push(\r\n      <TableCell >{cell}</TableCell>\r\n    )\r\n  })\r\n  return array;\r\n  },\r\n\r\n  displayRows = ()=> {\r\n    const array = []\r\n    for(let i=0; i<data.length; i++){\r\n      // console.log(coaches[i])\r\n      array.push(\r\n        <SickCoachRow \r\n          key={i+1} \r\n          serialNo={i+1}\r\n          data={data[i]}\r\n        />\r\n      )\r\n    }\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              displayTableHeads()\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tableBody}>\r\n          {\r\n            displayRows()\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nexport default SickCoachTable","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\logFormStyles.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\SideBar.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\styles\\trainFormStyles.js",[],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\DeleteButton.js",["236"],"import React from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        [theme.breakpoints.down('sm')]:{\r\n            width: '32px',\r\n            // display: 'none !important'\r\n        }\r\n    },\r\n    deleteButt: {\r\n        color: 'black',\r\n        // border: '1px solid black',\r\n        '& :hover': {\r\n            color: 'red',\r\n        },\r\n        [theme.breakpoints.down('sm')]:{\r\n            padding:'0px',\r\n        }\r\n    }\r\n}))\r\n\r\nconst DeleteButton = (props) => {\r\n    const classes = useStyles();\r\n    const {collection, itemID, changeCollectionSate, token} = props;\r\n    const \r\n    [open, setOpen] = React.useState(false),\r\n\r\n    handleOpen = (evt) => {\r\n        evt.stopPropagation();\r\n        setOpen(true);\r\n    },\r\n\r\n    handleClose = () => {\r\n        setOpen(false);\r\n    },\r\n    handleDelete = async (evt)=> {\r\n        evt.stopPropagation();\r\n        //find that train and delete from state array\r\n        const newArray = []\r\n        collection.map(item=> {\r\n            if(item._id !== itemID)   return newArray.push(item) ;\r\n\r\n        })\r\n        console.log(newArray)\r\n        changeCollectionSate(newArray)\r\n        await axios\r\n        .delete(`/api/log/train/${itemID}`,{ headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log(response)\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n        console.log(collection)\r\n        console.log(itemID)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button onClick={evt=> handleOpen(evt)} className={classes.deleteButt}>\r\n                <DeleteIcon />\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                Are You Sure?\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    Permenantly Delete This Entry.\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button variant=\"outlined\" onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    onClick={(evt)=> {\r\n                        handleDelete(evt)\r\n                        handleClose()\r\n                    }}\r\n                    color=\"secondary\"\r\n                >\r\n                    Delete!\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteButton\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\CoachRow.js",["237","238","239"],"import React, { useState, useContext } from 'react';\r\nimport UserContext from '../../context/UserContext' \r\nimport axios from 'axios'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      borderBottom: '0px', \r\n      width: '100%',\r\n    },\r\n    cell: {\r\n      '&:hover': {\r\n        backgroundColor: '#d6d6d6'\r\n      },\r\n      padding: '0px',\r\n      borderLeft: '1px solid #d6d6d6',\r\n      borderRight: '1px solid #d6d6d6',\r\n    },\r\n    cellInput: {\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '76px',\r\n      width: '80px',\r\n      textAlign: 'center',\r\n\r\n    },\r\n    worksRow:{\r\n      // position: 'absolute'\r\n    },\r\n    worksCellInput:{\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      // height: '60px',\r\n      // width: '250px',\r\n      textAlign: 'left',\r\n    },\r\n    uploadButton:{\r\n      backgroundColor: ''\r\n    },\r\n    CheckCircleIcon: {\r\n      color: 'green'\r\n    },\r\n    LoopIcon: {\r\n      color: 'orange',\r\n      fontSize: '0.4rem',\r\n      // position: 'absolute'\r\n    },\r\n    iconCell:{\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      paddingLeft:'0px',\r\n      paddingRight:'0px',\r\n      '& > *': {\r\n        paddingLeft: '0px',\r\n        paddingRight: '0px',\r\n        minWidth: '50%'\r\n      },\r\n      minHeight: '76px',\r\n    },\r\n    sickButton:{\r\n      color: 'red',\r\n      fontWeight: 'bold',\r\n      fontSize: '1.2rem'\r\n    },\r\n  });\r\n\r\nconst CoachRow = (props)=> {\r\n    const { serialNo, currentLog, trainId, addSickCoach } = props;\r\n    const { userData, setUserData } = useContext(UserContext)\r\n    const token = userData.token\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const cellNames = [\r\n      'owningRailway', 'coachNo', 'coachCode', 'mechCode', \r\n      'returnDate', 'pohStation', 'pohDate', 'iohStation', \r\n      'iohDate', 'angleCock'\r\n    ]\r\n    const workNames = ['underGearWorks', 'pipeLineWorks', 'carpentryWorks', 'airBrakeWorks']\r\n    \r\n    const [displayUploadIcon, setDisplayUploadIcon] = useState('block')\r\n    const [displayLoopIcon, setDisplayLoopIcon] = useState('none')\r\n    const [displayCheckIcon, setDisplayCheckIcon] = useState('none')\r\n    const [borderBottom, setborderBottom] = useState('grey')\r\n\r\n    const [coachData, setCoachData] = useState([{\r\n      serialNo: serialNo,\r\n      owningRailway: 'CR',\r\n      coachNo: '20101',\r\n      coachCode: 'ACCN',\r\n      mechCode: 'aa',\r\n      returnDate: '2017-05-24', \r\n      pohStation: 'MTN', \r\n      pohDate: '2017-05-24', \r\n      iohStation: 'PA', \r\n      iohDate: '2017-05-24', \r\n      angleCock: 'open/open',\r\n    }])\r\n    const [worksData, setworksData] = useState([{\r\n      underGearWorks: '11091700', pipeLineWorks: 'bababa',\r\n      carpentryWorks: 'aaaa', airBrakeWorks: 'aaas'\r\n    }])\r\n    // console.log([...coachData[0]])\r\n\r\n    const evalVariable = (stateName, val)=> {\r\n        let object = stateName,\r\n            dot = '.',\r\n            method = `${val}`,\r\n            wholeString = object + dot + method;\r\n        return(eval(wholeString)) \r\n        // console.log(object)\r\n    } \r\n\r\n    const handleChange = (evt)=> {\r\n      const value = evt.target.value;\r\n      setCoachData([{\r\n        ...coachData[0],\r\n        [evt.target.name]: value\r\n      }]);\r\n      console.log(evt.target.name)\r\n      console.log(evt.target.value)\r\n    }\r\n\r\n    const handleWorksChange = evt=> {\r\n      const value = evt.target.value;\r\n      setworksData([{\r\n        ...worksData[0],\r\n        [evt.target.name]: value\r\n      }]);\r\n      console.log(evt.target.name)\r\n      console.log(evt.target.value)\r\n    }\r\n\r\n    const body = {\r\n      serialNo: coachData[0].serialNo,\r\n      owningRailway: coachData[0].owningRailway,\r\n      coachNo: coachData[0].coachNo,\r\n      coachCode: coachData[0].coachCode,\r\n      mechCode: coachData[0].mechCode,\r\n      returnDate: coachData[0].returnDate,\r\n      angleCock: coachData[0].angleCock,\r\n      underGearWorks: worksData[0].underGearWorks,\r\n      pipeLineWorks: worksData[0].pipeLineWorks,\r\n      carpentryWorks: worksData[0].carpentryWorks,\r\n      airBrakeWorks: worksData[0].airBrakeWorks,\r\n      pohStation: coachData[0].pohStation,\r\n      pohDate: coachData[0].pohDate,\r\n      iohStation: coachData[0].iohStation,\r\n      iohDate: coachData[0].iohDate,\r\n    }\r\n    \r\n    const sendData = async ()=> {\r\n      ///api/log/coach/:logId/:trainId\r\n      console.log(body)\r\n      setDisplayUploadIcon('none')\r\n      setDisplayLoopIcon('block')\r\n      setborderBottom('orange')\r\n        await axios\r\n        .post(`/api/log/coach/${currentLog}/${trainId}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log(response)\r\n          console.log(response.status)\r\n          if(response.status === 200){\r\n            setDisplayLoopIcon('none')\r\n            setDisplayCheckIcon('block')\r\n            setborderBottom('green')\r\n          }\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n    }\r\n    const displayCells = ()=> {\r\n      const array = [];\r\n      for(let i=0; i<cellNames.length; i++){\r\n        if(i === 4 || i === 6 || i === 8){array.push(\r\n          <TableCell align=\"center\" width='100px' className={classes.cell}>\r\n            <input \r\n              name = {cellNames[i]}\r\n              type = 'date'\r\n              value={evalVariable('coachData[0]', cellNames[i])}\r\n              onChange= {(evt)=> handleChange(evt)}\r\n              className={classes.cellInput}\r\n            />\r\n          </TableCell>)\r\n        }\r\n        else{\r\n          array.push(\r\n            <TableCell align=\"center\" className={classes.cell}>\r\n              <input \r\n                name = {cellNames[i]}\r\n                value={evalVariable('coachData[0]', cellNames[i])}\r\n                onChange= {(evt)=> handleChange(evt)}\r\n                className={classes.cellInput}\r\n              />\r\n            </TableCell>)\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n    \r\n    const displayWorksCells = ()=> {\r\n      const array = [];\r\n      for(let i=0; i<workNames.length; i++){\r\n        array.push(\r\n          <TableCell align=\"left\" className={classes.cell}>\r\n            <textarea \r\n              name = {workNames[i]}\r\n              value={evalVariable('worksData[0]', workNames[i])}\r\n              onChange= {(evt)=> handleWorksChange(evt)}\r\n              className={classes.worksCellInput}\r\n              style={{width: '100%',}}\r\n            />\r\n          </TableCell>)\r\n      }\r\n      return array;\r\n    }\r\n\r\n    // const sendSickData = ()=> {\r\n    //   const sickData = {\r\n    //     serialNo: serialNo,\r\n    //     owningRailway: body.owningRailway,\r\n    //     coachNo: body.coachNo,\r\n    //     coachCode: body.coachCode,\r\n    //     returnDate: body.returnDate, \r\n    //     pohStation: body.pohStation, \r\n    //     pohDate: body.pohDate, \r\n    //     iohStation: body.iohStation, \r\n    //     iohDate: body.iohDate,\r\n    //   }\r\n    //   addSickCoach(sickData)\r\n    // }\r\n\r\n    return (\r\n        // <h1>Row</h1>\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n          <TableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n            <input \r\n                value={coachData[0].serialNo}\r\n                className={classes.cellInput}\r\n              />\r\n          </TableCell>\r\n          {\r\n            displayCells()\r\n          }\r\n          <TableCell className={classes.iconCell} style={{borderBottom:`4px solid ${borderBottom}`}}>\r\n            <Button  onClick={()=> sendData()} className={classes.uploadButton} style={{display: displayUploadIcon}}><CloudUploadIcon /></Button>\r\n            <Button className={classes.LoopIcon} style={{display: displayLoopIcon}}>\r\n              <LoopIcon /> \r\n              <span style={{}}>uploading...</span>\r\n            </Button>\r\n            <Button className={classes.CheckCircleIcon} style={{display: displayCheckIcon}}><CheckCircleIcon /></Button>\r\n            {/* <Button className={classes.sickButton} onClick={()=> sendSickData()}>S</Button> */}\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow className={classes.worksRow}>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Works\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Undergear Works</TableCell>\r\n                      <TableCell align=\"center\">Pipeline Works</TableCell>\r\n                      <TableCell align=\"center\">Carpentry Works</TableCell>\r\n                      <TableCell align=\"center\">Air Brake Works</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      <TableRow>\r\n                        {\r\n                          displayWorksCells()\r\n                        }\r\n                        {/* <TableCell>{worksRow.pipeLineWorks}</TableCell>\r\n                        <TableCell align=\"right\">{worksRow.carpentryWorks}</TableCell>\r\n                        <TableCell align=\"right\">{worksRow.airBrakeWorks}</TableCell> */}\r\n                      </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  CoachRow.propTypes = {\r\n    row: PropTypes.shape({\r\n      calories: PropTypes.number.isRequired,\r\n      carbs: PropTypes.number.isRequired,\r\n      fat: PropTypes.number.isRequired,\r\n      history: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          underGearWorks: PropTypes.string.isRequired,\r\n          pipeLineWorks: PropTypes.string.isRequired,\r\n          carpentryWorks: PropTypes.string.isRequired,\r\n          airBrakeWorks: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n\r\n  export default CoachRow;","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\Train.js",["240","241","242","243","244","245","246"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../../context/UserContext' \r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport Coach from './Coach'\r\nimport SickCoachTable from '../logFormContents/SickCoach'\r\nimport DeleteButton from '../DeleteButton'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: { \r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        width: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n        },\r\n        height: '100%'\r\n    },\r\n    accordionSummary:{\r\n        display: 'flex',\r\n        paddingLeft: '16px',\r\n        paddingRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: '4px',\r\n            paddingRight: '4px',\r\n        },\r\n        // backgroundColor: 'red',\r\n    },\r\n    deleteButton:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // marginLeft: '16px',\r\n        [theme.breakpoints.up('md')]:{\r\n            marginLeft: '128px',\r\n        },\r\n        [theme.breakpoints.down('sm')]:{\r\n            // marginLeft: '16px',\r\n        },\r\n    },\r\n    accordionDetails: {\r\n        fontSize: '15px',\r\n        display: 'flex',\r\n        // width: '100%',\r\n        flexWrap: 'wrap',\r\n        // flexDirection:'column',\r\n        justifyContent: 'space-between',\r\n        // padding: '0px',\r\n        '& > *': {\r\n        //   margin: theme.spacing(1),\r\n        //   // width: theme.spacing(16),\r\n        //   display: 'flex',\r\n        //   height: 'auto',\r\n        //   alignItems: 'baseline',\r\n        },\r\n        \r\n    },\r\n    accordDivs:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderRadius:'5px',\r\n        backgroundColor: '#e6e6e6',\r\n        margin: '4px 0px',\r\n        padding: '4px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%'\r\n        },\r\n        maxWidth: '500px'\r\n    },\r\n    accordDivTitles:{\r\n        fontWeight: 'bold'\r\n    },\r\n    accordDivDetails:{\r\n        // backgroundColor: 'blue'\r\n        display: 'flex',\r\n        // flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        flexShrink: '1',\r\n        margin: '4px 0',\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'baseline',\r\n            margin: '4px',\r\n            // backgroundColor: 'blue'\r\n        }\r\n    },\r\n    property: {\r\n        // backgroundColor: 'red'\r\n        color: '#636363',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '4px'\r\n        }\r\n    },\r\n    frontRear:{\r\n        // backgroundColor: 'red',\r\n        marginRight: '8px'\r\n    },\r\n    value: {\r\n        borderRadius: '5px',\r\n        // backgroundColor: '#b5b5b5',\r\n        padding: theme.spacing(0),\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: theme.spacing(1), \r\n            fontSize: '25px',\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n    AccordionSummaryBody: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        '& > *': {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'baseline',\r\n            [theme.breakpoints.down('sm')]:{\r\n                maxWidth: '100px',\r\n            },\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            width: '90%',\r\n        },\r\n    },\r\n    coachIcon:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '50%',\r\n        backgroundColor: '#808080',\r\n        },\r\n    addCoach:{\r\n        width: '100%',\r\n        margin: '8px auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    sickCoaches:{\r\n        width: '100%',\r\n    },\r\n    addSickCoach:{\r\n        // backgroundColor: 'red',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    paperTitle:{\r\n      fontSize: '1.5rem',\r\n      marginTop: theme.spacing(2),\r\n      borderBottom: '1px solid #d4d4d4',\r\n      width: '100%',\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginLeft:'auto',\r\n        marginRight:'auto',\r\n        alignSelf: 'center',\r\n        width: '75%',\r\n      },\r\n    },\r\n    paperSickTitle:{\r\n        fontSize: '1.5rem',\r\n        borderBottom: '1px solid #d4d4d4',\r\n        width: '75%',\r\n    },\r\n    addSickCoachButton:{\r\n        width: '25%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '10%'\r\n        },\r\n    },\r\n  }));\r\n\r\nconst Train = (props) => {\r\n    // const {testing, carpentry, oiling, otherWorks, \r\n    //     pipeFitting, strength, underGear} = props;\r\n    const { data, collection, itemID, changeCollectionSate, currentLog } = props;\r\n    console.log(data.washingAndCleaning.checkBox)\r\n    const classes = useStyles();\r\n    const { userData, setUserData } = useContext(UserContext);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [CoachData, setCoachData] = useState(data.coaches)\r\n    const [CoachTableOn, setCoachTableOn] = useState('false');\r\n    const token = userData.token;\r\n    const { brakeType, remarks, timeReplacementProvided, \r\n            timeUnfitMemoIssued, trainName, trainNo, \r\n            load } = data\r\n    const { memoNo, timeRecieved, pitlineNo } = data.formation\r\n    const { lineBlockingTime, lineReleaseTime } = data.protectionOfRake\r\n    const trainId = itemID;\r\n    \r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n      };\r\n    \r\n    const evalVariable = (stateName, val)=> {\r\n        let object = stateName,\r\n            dot = '.',\r\n            method = `${val}`,\r\n            wholeString = object + dot + method;\r\n        return(eval(wholeString)) \r\n        // console.log(eval(wholeString))\r\n    } \r\n\r\n    const displayWashing = ()=> {\r\n        const works = ['internalCleaning', 'externalCleaning', \r\n                        'lavatoryFloorCleaning', 'disinfectionOfLavatory', 'pestControl']\r\n        const worksNames = ['Internal Cleaning', 'External Cleaning', \r\n                        'Lavatory Floor Cleaning', 'Disinfection Of Lavatory', 'Pest Control']\r\n        let array = []\r\n            for(let i = 0; i < works.length; i++){\r\n                if(evalVariable('data.washingAndCleaning', works[i])){\r\n                    array.push(\r\n                        <div>\r\n                            <span>{worksNames[i]}</span>\r\n                            <Checkbox\r\n                                checked={evalVariable('data.washingAndCleaning', works[i])}\r\n                                name= {works[i]}\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }// console.log(array);\r\n            }\r\n            return array\r\n    }\r\n    \r\n\r\n    return (\r\n        // <div className={classes.root}>\r\n            <Accordion className={classes.root} expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2bh-content\"\r\n                id=\"panel2bh-header\"\r\n                className={classes.accordionSummary}\r\n                >\r\n                    <div className={classes.AccordionSummaryBody}>\r\n                    <div>\r\n                        <span className={classes.property}>Train No </span>\r\n                        <span className={classes.value}>{trainNo}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className={classes.property}>Train Name</span>\r\n                        <span className={classes.value}>{trainName}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className={classes.property}>Pit No</span>\r\n                        <span className={classes.value}>{pitlineNo}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className={classes.property}>Load</span>\r\n                        <span className={classes.value}>{load}</span>\r\n                    </div>\r\n                    </div>\r\n                    <div className={classes.deleteButton}>\r\n                    <DeleteButton \r\n                        collection={collection} itemID={itemID} \r\n                        changeCollectionSate={changeCollectionSate} token={token}/>\r\n                    </div>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    {/* <div className={classes.paper}> */}\r\n                        <div className={classes.accordDivs}>\r\n                            <span className={classes.accordDivTitles}>Formation</span>\r\n                            <div className={classes.accordDivDetails}>\r\n                                <div>\r\n                                    <span className={classes.property}>Memo No</span>\r\n                                    <span className={classes.value}>{memoNo}</span></div>\r\n                                <div>\r\n                                    <span className={classes.property}>Time Received</span>\r\n                                    <span className={classes.value}>{timeRecieved}</span></div>\r\n                                <div>\r\n                                    <span className={classes.property}>Brake Type</span>\r\n                                    <span className={classes.value}>{brakeType}</span>\r\n                                </div>\r\n                                <div className={classes.pitNloadSM}>\r\n                                    <span className={classes.property}>Pit No</span>\r\n                                    <span className={classes.value}>{pitlineNo}</span></div>\r\n                                <div className={classes.pitNloadSM}>\r\n                                    <span className={classes.property}>Load</span>\r\n                                    <span className={classes.value}>{load}</span></div>\r\n                                {/* className={classes.property} <div>Pit No<span className={classes.value}>{pitlineNo}</span></div> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* className={classes.property} <div>Load<span className={classes.value}>{load}</span></div> */}\r\n                        <div className={classes.accordDivs}> \r\n                            <span className={classes.accordDivTitles}>Protection Of Rake</span>\r\n                            <div className={classes.accordDivDetails}>\r\n                                <div>\r\n                                    <span className={classes.property}>Line Blocking Time</span>\r\n                                    <span className={classes.value}>{lineBlockingTime}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className={classes.property}>Line Release Time</span>\r\n                                    <span className={classes.value}>{lineReleaseTime}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className={classes.accordDivs}>\r\n                            <span className={classes.accordDivTitles}>Pressure</span>\r\n                            <div className={classes.accordDivDetails}>\r\n                                <div className={classes.bp}>\r\n                                    <span className={classes.property}>Brake Pipe</span>\r\n                                    <div>\r\n                                        <span className={classes.frontRear}>Front:</span>\r\n                                        <span className={classes.value}>{data.pressure.bp.front}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className={classes.frontRear}>Rear:</span>\r\n                                        <span className={classes.value}>{data.pressure.bp.rear}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.fp}>\r\n                                    <span className={classes.property}>Feed Pipe</span>\r\n                                    <div>\r\n                                        <span className={classes.frontRear}>Front:</span>\r\n                                        <span className={classes.value}>{data.pressure.fp.front}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className={classes.frontRear}>Rear:</span>\r\n                                        <span className={classes.value}>{data.pressure.fp.rear}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className={classes.accordDivs}>\r\n                            <span className={classes.accordDivTitles}>Sick Data</span>\r\n                            <div className={classes.accordDivDetails}>\r\n                                <div>\r\n                                    <span className={classes.property}>Time Unfit Memo Issued</span>\r\n                                    <span className={classes.value}>{timeUnfitMemoIssued}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className={classes.property}>Time Replacement Provided</span>\r\n                                    <span className={classes.value}>{timeReplacementProvided}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className={classes.property}>Remarks</span>\r\n                                    <span className={classes.value}>{remarks}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {\r\n                            data.washingAndCleaning.checkBox ? (\r\n                                <div className={classes.accordDivs}>\r\n                                    <span className={classes.accordDivTitles}>Washing And Cleaning</span>\r\n                                    <div className={classes.accordDivDetails}>\r\n                                    {\r\n                                        displayWashing()\r\n                                    }\r\n                                    </div>    \r\n                                </div>\r\n                            )\r\n                                    :\r\n                                    <></>\r\n                        }\r\n                    <div className={classes.addCoach}>\r\n                        <span className={classes.paperTitle}>Coaches</span>\r\n                        <Coach load={load}  currentLog={currentLog} trainId={trainId}/> : <></>\r\n                    </div>\r\n                    {/* <div className={classes.sickCoaches}>\r\n                        <div className={classes.addSickCoach}>\r\n                            <span  className={classes.paperSickTitle}>Sick Coaches</span>\r\n                            <Button \r\n                                color='primary' \r\n                                variant=\"contained\" \r\n                                className={classes.addSickCoachButton}\r\n                                onClick={()=> addSickCoach()}\r\n                            >\r\n                                <AddIcon />\r\n                            </Button>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <SickCoachTable currentLog={currentLog} trainId={trainId}/>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Train\r\n","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\Trains.js",["247","248","249","250","251","252"],"C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\CoachTable.js",["253"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CoachRow from './CoachRow'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    '& * >': {\r\n    },\r\n  }\r\n}))\r\n\r\nconst CoachTable = (props)=> {\r\n  const { load, currentLog, trainId, coaches } = props;\r\n  // console.log(currentLog)\r\n  // console.log('table')\r\n  console.log(coaches)\r\n  const classes = useStyles();\r\n  const tableHeads = ['Serial No','Owning Railway', 'Painted Number', 'Coach Code', \r\n  'Mech Code', 'Return Date', 'POH Station', 'POH Date',\r\n  'IOH Station', 'IOH Date', 'Angle Cock'],\r\n  \r\n  displayTableHeads = ()=> {\r\n  const array = [];\r\n  \r\n  tableHeads.map(cell=> {\r\n    array.push(\r\n      <TableCell >{cell}</TableCell>\r\n    )\r\n  })\r\n  return array;\r\n  },\r\n\r\n  displayRows = ()=> {\r\n    const array = []\r\n    for(let i=0; i<load; i++){\r\n      // console.log(coaches[i])\r\n      array.push(\r\n        <CoachRow \r\n          key={i+1} \r\n          currentLog={currentLog} \r\n          trainId={trainId} \r\n          data={coaches[i]}\r\n        />\r\n      )\r\n    }\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            {\r\n              displayTableHeads()\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tableBody}>\r\n          {\r\n            displayRows()\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nexport default CoachTable","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\CoachRow.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useContext } from 'react';\r\nimport UserContext from '../../context/UserContext' \r\n\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        // borderBottom: 'unset',\r\n      },\r\n      width: '100%'\r\n    },\r\n    cell: {\r\n      // backgroundColor: 'blue',\r\n      '&:hover': {\r\n        backgroundColor: '#d6d6d6'\r\n      },\r\n      padding: '0px 0px',\r\n      borderLeft: '1px solid #d6d6d6'\r\n    },\r\n    cellInput: {\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '60px',\r\n      width: '80px',\r\n      textAlign: 'center',\r\n\r\n    },\r\n    worksRow:{\r\n      // position: 'absolute'\r\n    },\r\n    worksCellInput:{\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '60px',\r\n      // width: '250px',\r\n      textAlign: 'left',\r\n    },\r\n    worksCell:{\r\n      borderLeft: '1px solid #d6d6d6',\r\n      borderRight: '1px solid #d6d6d6',\r\n      width: '20%',\r\n    },\r\n    workTable:{\r\n      // backgroundColor: '#dedcdc'\r\n    },\r\n    uploadButton:{\r\n      backgroundColor: ''\r\n    },\r\n    CheckCircleIcon: {\r\n      color: 'green'\r\n    },\r\n    LoopIcon: {\r\n      color: 'orange',\r\n      fontSize: '0.4rem',\r\n      // position: 'absolute'\r\n    },\r\n  }); \r\n\r\nconst CoachRow = (props)=> {\r\n    const { data } = props;\r\n    console.log(data)\r\n    const { serialNo, owningRailway, coachNo, coachCode, mechCode, returnDate, \r\n            pohStation, pohDate, iohStation, iohDate,\r\n            angleCock, airBrakeWorks, carpentryWorks, pipeLineWorks, underGearWorks} = data\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const cellNames = ['serialNo',\r\n      'owningRailway', 'coachNo', 'coachCode', 'mechCode', \r\n      'returnDate', 'pohStation', 'pohDate', 'iohStation', \r\n      'iohDate', 'angleCock'\r\n    ]\r\n    const workNames = ['underGearWorks', 'pipeLineWorks', 'carpentryWorks', 'airBrakeWorks']\r\n    \r\n\r\n    \r\n    const displayCells = ()=> {\r\n      const array = [];\r\n      for(let i=0; i<cellNames.length; i++){\r\n          array.push(\r\n            <TableCell align=\"center\" width='100px' className={classes.cell}>\r\n              {eval(cellNames[i])}\r\n            </TableCell>)\r\n      }\r\n      return array;\r\n    }\r\n    \r\n    const displayWorksCells = ()=> {\r\n      const array = [];\r\n      for(let i=0; i<workNames.length; i++){\r\n        array.push(\r\n          <TableCell align=\"center\" className={classes.worksCell}>\r\n            {eval(workNames[i])}\r\n          </TableCell>)\r\n      }\r\n      return array;\r\n    }\r\n\r\n    \r\n    return (\r\n        // <h1>Row</h1>\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n        <TableCell>\r\n        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n        </IconButton>\r\n      </TableCell> \r\n          {\r\n            displayCells()\r\n          }\r\n        </TableRow>\r\n        <TableRow className={classes.worksRow}>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Works\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\" className={classes.workTable}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Undergear Works</TableCell>\r\n                      <TableCell align=\"center\">Pipeline Works</TableCell>\r\n                      <TableCell align=\"center\">Carpentry Works</TableCell>\r\n                      <TableCell align=\"center\">Air Brake Works</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      <TableRow>\r\n                        {\r\n                          displayWorksCells()\r\n                        }\r\n                        {/* <TableCell>{worksRow.pipeLineWorks}</TableCell>\r\n                        <TableCell align=\"right\">{worksRow.carpentryWorks}</TableCell>\r\n                        <TableCell align=\"right\">{worksRow.airBrakeWorks}</TableCell> */}\r\n                      </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  CoachRow.propTypes = {\r\n    row: PropTypes.shape({\r\n      calories: PropTypes.number.isRequired,\r\n      carbs: PropTypes.number.isRequired,\r\n      fat: PropTypes.number.isRequired,\r\n      history: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          underGearWorks: PropTypes.string.isRequired,\r\n          pipeLineWorks: PropTypes.string.isRequired,\r\n          carpentryWorks: PropTypes.string.isRequired,\r\n          airBrakeWorks: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n\r\n  export default CoachRow;","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logFormContents\\SickCoachRow.js",["273","274"],"import React, { useState, useContext } from 'react';\r\nimport UserContext from '../../context/UserContext' \r\nimport axios from 'axios'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n      },\r\n      borderBottom: '0px', \r\n      width: '100%',\r\n      // backgroundColor: 'skyblue'\r\n    },\r\n    cell: {\r\n    //   backgroundColor: 'blue',\r\n      '&:hover': {\r\n        backgroundColor: '#d6d6d6'\r\n      },\r\n      padding: '0px 0px',\r\n      borderLeft: '1px solid #d6d6d6',\r\n      borderRight: '1px solid #d6d6d6',\r\n    },\r\n    cellInput: {\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '76px',\r\n      width: '100%',\r\n      textAlign: 'center',\r\n\r\n    },\r\n    worksRow:{\r\n      // position: 'absolute'\r\n    },\r\n    worksCellInput:{\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      // height: '60px',\r\n      // width: '250px',\r\n      textAlign: 'left',\r\n    },\r\n    uploadButton:{\r\n      backgroundColor: ''\r\n    },\r\n    CheckCircleIcon: {\r\n      color: 'green'\r\n    },\r\n    LoopIcon: {\r\n      color: 'orange',\r\n      fontSize: '0.4rem',\r\n      // position: 'absolute'\r\n    },\r\n    iconCell:{\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      paddingLeft:'0px',\r\n      paddingRight:'0px',\r\n      '& > *': {\r\n        paddingLeft: '0px',\r\n        paddingRight: '0px',\r\n        minWidth: '50%'\r\n      },\r\n    },\r\n    sickButton:{\r\n      color: 'red',\r\n      fontWeight: 'bold',\r\n      fontSize: '1.2rem'\r\n    },\r\n  });\r\n\r\nconst CoachRow = (props)=> {\r\n    const { serialNo, currentLog, trainId  } = props;\r\n    const { userData, setUserData } = useContext(UserContext)\r\n    const token = userData.token\r\n    const classes = useRowStyles();\r\n    const cellNames = [\r\n      'owningRailway', 'coachNo', 'coachCode', \r\n      'returnDate', 'pohStation', 'pohDate', 'iohStation', \r\n      'iohDate', 'description'\r\n    ]\r\n    \r\n    const [displayUploadIcon, setDisplayUploadIcon] = useState('block')\r\n    const [displayLoopIcon, setDisplayLoopIcon] = useState('none')\r\n    const [displayCheckIcon, setDisplayCheckIcon] = useState('none')\r\n    const [borderBottom, setborderBottom] = useState('grey')\r\n\r\n    const [coachData, setCoachData] = useState([{\r\n      serialNo: serialNo,\r\n      owningRailway: 'CR',\r\n      coachNo: '20101',\r\n      coachCode: 'ACCN',\r\n      returnDate: '2017-05-24', \r\n      pohStation: 'MTN', \r\n      pohDate: '2017-05-24', \r\n      iohStation: 'PA', \r\n      iohDate: '2017-05-24', \r\n      description: 'wheel defect',\r\n    }])\r\n    // console.log([...coachData[0]])\r\n\r\n    const evalVariable = (stateName, val)=> {\r\n        let object = stateName,\r\n            dot = '.',\r\n            method = `${val}`,\r\n            wholeString = object + dot + method;\r\n        return(eval(wholeString)) \r\n        // console.log(object)\r\n    } \r\n\r\n    const handleChange = (evt)=> {\r\n      const value = evt.target.value;\r\n      setCoachData([{\r\n        ...coachData[0],\r\n        [evt.target.name]: value\r\n      }]);\r\n      console.log(evt.target.name)\r\n      console.log(evt.target.value)\r\n    }\r\n\r\n\r\n    const body = {\r\n      serialNo: coachData[0].serialNo,\r\n      owningRailway: coachData[0].owningRailway,\r\n      coachNo: coachData[0].coachNo,\r\n      coachCode: coachData[0].coachCode,\r\n      returnDate: coachData[0].returnDate,\r\n      pohStation: coachData[0].pohStation,\r\n      pohDate: coachData[0].pohDate,\r\n      iohStation: coachData[0].iohStation,\r\n      iohDate: coachData[0].iohDate,\r\n      description: coachData[0].description\r\n    }\r\n    \r\n    const sendData = async ()=> {\r\n      ///api/log/sickCoach//:logId/:trainId\r\n      console.log(body)\r\n      setDisplayUploadIcon('none')\r\n      setDisplayLoopIcon('block')\r\n      setborderBottom('orange')\r\n        await axios\r\n        .post(`/api/log/sickCoach/${currentLog}/${trainId}`, body, { headers: { \"x-auth-token\": token}})\r\n        .then(response=> {\r\n          console.log(response)\r\n          console.log(response.status)\r\n          if(response.status === 200){\r\n            setDisplayLoopIcon('none')\r\n            setDisplayCheckIcon('block')\r\n            setborderBottom('green')\r\n          }\r\n        })\r\n        .catch(error=> {\r\n          console.log(error)\r\n        })\r\n    }\r\n    const displayCells = ()=> {\r\n      const array = [];\r\n      let width = '100px'\r\n      for(let i=0; i<cellNames.length; i++){\r\n          if (i === 8) width = '200px';\r\n          array.push(\r\n            <TableCell align=\"center\" width={width} className={classes.cell}>\r\n              <input \r\n                name = {cellNames[i]}\r\n                value={evalVariable('coachData[0]', cellNames[i])}\r\n                onChange= {(evt)=> handleChange(evt)}\r\n                className={classes.cellInput}\r\n                width={width} \r\n              />\r\n            </TableCell>)\r\n      }\r\n      return array;\r\n    }\r\n    \r\n    return (\r\n        // <h1>Row</h1>\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n          <TableCell component=\"th\" scope=\"row\" width='100px' className={classes.cell}>\r\n            <input \r\n                value={coachData[0].serialNo}\r\n                className={classes.cellInput}\r\n              />\r\n          </TableCell>\r\n          {\r\n            displayCells()\r\n          }\r\n          <TableCell className={classes.iconCell} style={{borderBottom:`4px solid ${borderBottom}`}}>\r\n            <Button  onClick={()=> sendData()} className={classes.uploadButton} style={{display: displayUploadIcon}}><CloudUploadIcon /></Button>\r\n            <Button className={classes.LoopIcon} style={{display: displayLoopIcon}}>\r\n              <LoopIcon /> \r\n              <span style={{}}>uploading...</span>\r\n            </Button>\r\n            <Button className={classes.CheckCircleIcon} style={{display: displayCheckIcon}}><CheckCircleIcon /></Button>\r\n            {/* <Button className={classes.sickButton} onClick={()=> sendSickData()}>S</Button> */}\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  CoachRow.propTypes = {\r\n    row: PropTypes.shape({\r\n      calories: PropTypes.number.isRequired,\r\n      carbs: PropTypes.number.isRequired,\r\n      fat: PropTypes.number.isRequired,\r\n      history: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          underGearWorks: PropTypes.string.isRequired,\r\n          pipeLineWorks: PropTypes.string.isRequired,\r\n          carpentryWorks: PropTypes.string.isRequired,\r\n          airBrakeWorks: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n\r\n  export default CoachRow;","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\components\\logContents\\SickCoachRow.js",["275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React, { useContext } from 'react';\r\nimport UserContext from '../../context/UserContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        // borderBottom: 'unset',\r\n      },\r\n      width: '100%'\r\n    },\r\n    cell: {\r\n      // backgroundColor: 'blue',\r\n      '&:hover': {\r\n        backgroundColor: '#d6d6d6'\r\n      },\r\n      padding: '0px 0px',\r\n      borderLeft: '1px solid #d6d6d6'\r\n    },\r\n    cellInput: {\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '60px',\r\n      width: '80px',\r\n      textAlign: 'center',\r\n\r\n    },\r\n    worksRow:{\r\n      // position: 'absolute'\r\n    },\r\n    worksCellInput:{\r\n      backgroundColor: 'inherit',\r\n      fontSize: '0.9rem',\r\n      border: '0',\r\n      height: '60px',\r\n      // width: '250px',\r\n      textAlign: 'left',\r\n    },\r\n    worksCell:{\r\n      borderLeft: '1px solid #d6d6d6',\r\n      borderRight: '1px solid #d6d6d6',\r\n      width: '20%',\r\n    },\r\n    workTable:{\r\n      // backgroundColor: '#dedcdc'\r\n    },\r\n    uploadButton:{\r\n      backgroundColor: ''\r\n    },\r\n    CheckCircleIcon: {\r\n      color: 'green'\r\n    },\r\n    LoopIcon: {\r\n      color: 'orange',\r\n      fontSize: '0.4rem',\r\n      // position: 'absolute'\r\n    },\r\n  }); \r\n\r\nconst SickCoachRow = (props)=> {\r\n    const { data, serialNo } = props;\r\n    console.log(data)\r\n    const {owningRailway, coachNo, coachCode, mechCode, returnDate, \r\n            pohStation, pohDate, iohStation, iohDate, description} = data\r\n    const { userData, setUserData } = useContext(UserContext)\r\n    const classes = useRowStyles();\r\n    const cellNames = ['owningRailway', 'coachNo', 'coachCode', \r\n      'returnDate', 'pohStation', 'pohDate', 'iohStation', \r\n      'iohDate', 'description'\r\n    ]\r\n    \r\n \r\n    \r\n    const displayCells = ()=> {\r\n      const array = [];\r\n      for(let i=0; i<cellNames.length; i++){\r\n          array.push(\r\n            <TableCell align=\"center\" width='100px' height='76px' className={classes.cell}>\r\n              {eval(cellNames[i])}\r\n            </TableCell>\r\n            )\r\n      }\r\n      return array;\r\n    }\r\n    \r\n    return (\r\n        // <h1>Row</h1>\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n            <TableCell align=\"center\" width='100px' className={classes.cell}>\r\n              {serialNo}\r\n            </TableCell>\r\n          {\r\n            displayCells()\r\n          }\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n  export default SickCoachRow;","C:\\Users\\abhay\\Desktop\\rmd\\client\\src\\icons\\iconsArray.js",[],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":75,"column":12,"nodeType":"294","messageId":"295","endLine":75,"endColumn":20},{"ruleId":"292","severity":1,"message":"296","line":120,"column":20,"nodeType":"294","messageId":"295","endLine":120,"endColumn":34},{"ruleId":"292","severity":1,"message":"297","line":122,"column":12,"nodeType":"294","messageId":"295","endLine":122,"endColumn":19},{"ruleId":"292","severity":1,"message":"298","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":17},{"ruleId":"292","severity":1,"message":"299","line":18,"column":16,"nodeType":"294","messageId":"295","endLine":18,"endColumn":26},{"ruleId":"292","severity":1,"message":"300","line":209,"column":13,"nodeType":"294","messageId":"295","endLine":209,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":251,"column":15,"nodeType":"303","endLine":254,"endColumn":6},{"ruleId":"301","severity":1,"message":"304","line":254,"column":7,"nodeType":"305","endLine":254,"endColumn":9,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":259,"column":28,"nodeType":"303","messageId":"309","endLine":259,"endColumn":30},{"ruleId":"307","severity":1,"message":"308","line":273,"column":31,"nodeType":"303","messageId":"309","endLine":273,"endColumn":33},{"ruleId":"292","severity":1,"message":"300","line":39,"column":12,"nodeType":"294","messageId":"295","endLine":39,"endColumn":22},{"ruleId":"292","severity":1,"message":"310","line":40,"column":13,"nodeType":"294","messageId":"295","endLine":40,"endColumn":24},{"ruleId":"307","severity":1,"message":"308","line":53,"column":37,"nodeType":"303","messageId":"309","endLine":53,"endColumn":39},{"ruleId":"292","severity":1,"message":"311","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"312","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":22},{"ruleId":"292","severity":1,"message":"313","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":32},{"ruleId":"292","severity":1,"message":"314","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":20},{"ruleId":"292","severity":1,"message":"315","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":16},{"ruleId":"292","severity":1,"message":"316","line":13,"column":8,"nodeType":"294","messageId":"295","endLine":13,"endColumn":16},{"ruleId":"292","severity":1,"message":"317","line":36,"column":19,"nodeType":"294","messageId":"295","endLine":36,"endColumn":32},{"ruleId":"292","severity":1,"message":"318","line":37,"column":17,"nodeType":"294","messageId":"295","endLine":37,"endColumn":28},{"ruleId":"292","severity":1,"message":"319","line":49,"column":11,"nodeType":"294","messageId":"295","endLine":49,"endColumn":16},{"ruleId":"292","severity":1,"message":"320","line":50,"column":11,"nodeType":"294","messageId":"295","endLine":50,"endColumn":18},{"ruleId":"288","replacedBy":"321"},{"ruleId":"290","replacedBy":"322"},{"ruleId":"292","severity":1,"message":"312","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":22},{"ruleId":"292","severity":1,"message":"318","line":25,"column":21,"nodeType":"294","messageId":"295","endLine":25,"endColumn":32},{"ruleId":"292","severity":1,"message":"323","line":44,"column":17,"nodeType":"294","messageId":"295","endLine":44,"endColumn":23},{"ruleId":"307","severity":1,"message":"308","line":31,"column":22,"nodeType":"303","messageId":"309","endLine":31,"endColumn":24},{"ruleId":"292","severity":1,"message":"317","line":20,"column":19,"nodeType":"294","messageId":"295","endLine":20,"endColumn":32},{"ruleId":"292","severity":1,"message":"318","line":21,"column":17,"nodeType":"294","messageId":"295","endLine":21,"endColumn":28},{"ruleId":"324","severity":1,"message":"325","line":116,"column":16,"nodeType":"326","messageId":"327","endLine":116,"endColumn":20},{"ruleId":"292","severity":1,"message":"311","line":1,"column":39,"nodeType":"294","messageId":"295","endLine":1,"endColumn":48},{"ruleId":"292","severity":1,"message":"328","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":21},{"ruleId":"292","severity":1,"message":"317","line":29,"column":19,"nodeType":"294","messageId":"295","endLine":29,"endColumn":32},{"ruleId":"292","severity":1,"message":"318","line":30,"column":17,"nodeType":"294","messageId":"295","endLine":30,"endColumn":28},{"ruleId":"292","severity":1,"message":"329","line":31,"column":7,"nodeType":"294","messageId":"295","endLine":31,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":176,"column":32,"nodeType":"303","messageId":"309","endLine":176,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":195,"column":16,"nodeType":"326","messageId":"327","endLine":195,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":60,"column":22,"nodeType":"303","messageId":"309","endLine":60,"endColumn":24},{"ruleId":"292","severity":1,"message":"330","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":16},{"ruleId":"292","severity":1,"message":"331","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":24},{"ruleId":"332","severity":1,"message":"333","line":71,"column":5,"nodeType":"334","messageId":"327","endLine":71,"endColumn":10},{"ruleId":"292","severity":1,"message":"335","line":154,"column":12,"nodeType":"294","messageId":"295","endLine":154,"endColumn":19},{"ruleId":"292","severity":1,"message":"336","line":154,"column":21,"nodeType":"294","messageId":"295","endLine":154,"endColumn":30},{"ruleId":"292","severity":1,"message":"337","line":154,"column":32,"nodeType":"294","messageId":"295","endLine":154,"endColumn":38},{"ruleId":"292","severity":1,"message":"338","line":154,"column":40,"nodeType":"294","messageId":"295","endLine":154,"endColumn":50},{"ruleId":"292","severity":1,"message":"339","line":155,"column":9,"nodeType":"294","messageId":"295","endLine":155,"endColumn":20},{"ruleId":"292","severity":1,"message":"340","line":155,"column":22,"nodeType":"294","messageId":"295","endLine":155,"endColumn":30},{"ruleId":"292","severity":1,"message":"341","line":155,"column":32,"nodeType":"294","messageId":"295","endLine":155,"endColumn":41},{"ruleId":"292","severity":1,"message":"342","line":156,"column":10,"nodeType":"294","messageId":"295","endLine":156,"endColumn":16},{"ruleId":"292","severity":1,"message":"343","line":156,"column":18,"nodeType":"294","messageId":"295","endLine":156,"endColumn":25},{"ruleId":"292","severity":1,"message":"344","line":156,"column":27,"nodeType":"294","messageId":"295","endLine":156,"endColumn":33},{"ruleId":"292","severity":1,"message":"345","line":156,"column":35,"nodeType":"294","messageId":"295","endLine":156,"endColumn":52},{"ruleId":"292","severity":1,"message":"346","line":156,"column":54,"nodeType":"294","messageId":"295","endLine":156,"endColumn":58},{"ruleId":"292","severity":1,"message":"347","line":156,"column":60,"nodeType":"294","messageId":"295","endLine":156,"endColumn":69},{"ruleId":"324","severity":1,"message":"325","line":170,"column":55,"nodeType":"326","messageId":"327","endLine":170,"endColumn":59},{"ruleId":"324","severity":1,"message":"325","line":183,"column":58,"nodeType":"326","messageId":"327","endLine":183,"endColumn":62},{"ruleId":"324","severity":1,"message":"325","line":190,"column":58,"nodeType":"326","messageId":"327","endLine":190,"endColumn":62},{"ruleId":"288","replacedBy":"348"},{"ruleId":"290","replacedBy":"349"},{"ruleId":"307","severity":1,"message":"308","line":33,"column":22,"nodeType":"303","messageId":"309","endLine":33,"endColumn":24},{"ruleId":"307","severity":1,"message":"350","line":50,"column":28,"nodeType":"303","messageId":"351","endLine":50,"endColumn":30},{"ruleId":"292","severity":1,"message":"352","line":88,"column":44,"nodeType":"294","messageId":"295","endLine":88,"endColumn":56},{"ruleId":"292","severity":1,"message":"318","line":89,"column":23,"nodeType":"294","messageId":"295","endLine":89,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":129,"column":16,"nodeType":"326","messageId":"327","endLine":129,"endColumn":20},{"ruleId":"292","severity":1,"message":"299","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":20},{"ruleId":"292","severity":1,"message":"318","line":188,"column":23,"nodeType":"294","messageId":"295","endLine":188,"endColumn":34},{"ruleId":"292","severity":1,"message":"353","line":190,"column":12,"nodeType":"294","messageId":"295","endLine":190,"endColumn":21},{"ruleId":"292","severity":1,"message":"354","line":190,"column":23,"nodeType":"294","messageId":"295","endLine":190,"endColumn":35},{"ruleId":"292","severity":1,"message":"355","line":191,"column":12,"nodeType":"294","messageId":"295","endLine":191,"endColumn":24},{"ruleId":"292","severity":1,"message":"356","line":191,"column":26,"nodeType":"294","messageId":"295","endLine":191,"endColumn":41},{"ruleId":"324","severity":1,"message":"325","line":209,"column":16,"nodeType":"326","messageId":"327","endLine":209,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":196,"column":13,"nodeType":"294","messageId":"295","endLine":196,"endColumn":21},{"ruleId":"292","severity":1,"message":"318","line":196,"column":23,"nodeType":"294","messageId":"295","endLine":196,"endColumn":34},{"ruleId":"292","severity":1,"message":"353","line":198,"column":12,"nodeType":"294","messageId":"295","endLine":198,"endColumn":21},{"ruleId":"292","severity":1,"message":"354","line":198,"column":23,"nodeType":"294","messageId":"295","endLine":198,"endColumn":35},{"ruleId":"292","severity":1,"message":"357","line":211,"column":11,"nodeType":"294","messageId":"295","endLine":211,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":220,"column":16,"nodeType":"326","messageId":"327","endLine":220,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":33,"column":22,"nodeType":"303","messageId":"309","endLine":33,"endColumn":24},{"ruleId":"292","severity":1,"message":"358","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":27},{"ruleId":"292","severity":1,"message":"359","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":19},{"ruleId":"292","severity":1,"message":"360","line":78,"column":13,"nodeType":"294","messageId":"295","endLine":78,"endColumn":21},{"ruleId":"292","severity":1,"message":"361","line":78,"column":23,"nodeType":"294","messageId":"295","endLine":78,"endColumn":36},{"ruleId":"292","severity":1,"message":"362","line":78,"column":38,"nodeType":"294","messageId":"295","endLine":78,"endColumn":45},{"ruleId":"292","severity":1,"message":"363","line":78,"column":47,"nodeType":"294","messageId":"295","endLine":78,"endColumn":56},{"ruleId":"292","severity":1,"message":"364","line":78,"column":58,"nodeType":"294","messageId":"295","endLine":78,"endColumn":66},{"ruleId":"292","severity":1,"message":"365","line":78,"column":68,"nodeType":"294","messageId":"295","endLine":78,"endColumn":78},{"ruleId":"292","severity":1,"message":"366","line":79,"column":13,"nodeType":"294","messageId":"295","endLine":79,"endColumn":23},{"ruleId":"292","severity":1,"message":"367","line":79,"column":25,"nodeType":"294","messageId":"295","endLine":79,"endColumn":32},{"ruleId":"292","severity":1,"message":"368","line":79,"column":34,"nodeType":"294","messageId":"295","endLine":79,"endColumn":44},{"ruleId":"292","severity":1,"message":"369","line":79,"column":46,"nodeType":"294","messageId":"295","endLine":79,"endColumn":53},{"ruleId":"292","severity":1,"message":"370","line":80,"column":13,"nodeType":"294","messageId":"295","endLine":80,"endColumn":22},{"ruleId":"292","severity":1,"message":"371","line":80,"column":24,"nodeType":"294","messageId":"295","endLine":80,"endColumn":37},{"ruleId":"292","severity":1,"message":"372","line":80,"column":39,"nodeType":"294","messageId":"295","endLine":80,"endColumn":53},{"ruleId":"292","severity":1,"message":"373","line":80,"column":55,"nodeType":"294","messageId":"295","endLine":80,"endColumn":68},{"ruleId":"292","severity":1,"message":"374","line":80,"column":70,"nodeType":"294","messageId":"295","endLine":80,"endColumn":84},{"ruleId":"324","severity":1,"message":"325","line":97,"column":16,"nodeType":"326","messageId":"327","endLine":97,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":108,"column":14,"nodeType":"326","messageId":"327","endLine":108,"endColumn":18},{"ruleId":"292","severity":1,"message":"318","line":83,"column":23,"nodeType":"294","messageId":"295","endLine":83,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":116,"column":16,"nodeType":"326","messageId":"327","endLine":116,"endColumn":20},{"ruleId":"292","severity":1,"message":"361","line":67,"column":12,"nodeType":"294","messageId":"295","endLine":67,"endColumn":25},{"ruleId":"292","severity":1,"message":"362","line":67,"column":27,"nodeType":"294","messageId":"295","endLine":67,"endColumn":34},{"ruleId":"292","severity":1,"message":"363","line":67,"column":36,"nodeType":"294","messageId":"295","endLine":67,"endColumn":45},{"ruleId":"292","severity":1,"message":"364","line":67,"column":47,"nodeType":"294","messageId":"295","endLine":67,"endColumn":55},{"ruleId":"292","severity":1,"message":"365","line":67,"column":57,"nodeType":"294","messageId":"295","endLine":67,"endColumn":67},{"ruleId":"292","severity":1,"message":"366","line":68,"column":13,"nodeType":"294","messageId":"295","endLine":68,"endColumn":23},{"ruleId":"292","severity":1,"message":"367","line":68,"column":25,"nodeType":"294","messageId":"295","endLine":68,"endColumn":32},{"ruleId":"292","severity":1,"message":"368","line":68,"column":34,"nodeType":"294","messageId":"295","endLine":68,"endColumn":44},{"ruleId":"292","severity":1,"message":"369","line":68,"column":46,"nodeType":"294","messageId":"295","endLine":68,"endColumn":53},{"ruleId":"292","severity":1,"message":"375","line":68,"column":55,"nodeType":"294","messageId":"295","endLine":68,"endColumn":66},{"ruleId":"292","severity":1,"message":"293","line":69,"column":13,"nodeType":"294","messageId":"295","endLine":69,"endColumn":21},{"ruleId":"292","severity":1,"message":"318","line":69,"column":23,"nodeType":"294","messageId":"295","endLine":69,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":83,"column":16,"nodeType":"326","messageId":"327","endLine":83,"endColumn":20},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'setProfileData' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'CardMedia' is defined but never used.","'useHistory' is defined but never used.","'CurrentLog' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.","ArrayExpression",["378"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'profileData' is assigned a value but never used.","'useEffect' is defined but never used.","'ProfileContext' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'AntWitch' is defined but never used.","'CheckBox' is defined but never used.","'setCurrentLog' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'works' is assigned a value but never used.","'divName' is assigned a value but never used.",["376"],["377"],"'setDay' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'useLocation' is defined but never used.","'CurrentTrain' is assigned a value but never used.","'purple' is defined but never used.","'FormControlLabel' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'testing' is assigned a value but never used.","'carpentry' is assigned a value but never used.","'oiling' is assigned a value but never used.","'otherWorks' is assigned a value but never used.","'pipeFitting' is assigned a value but never used.","'strength' is assigned a value but never used.","'underGear' is assigned a value but never used.","'absent' is assigned a value but never used.","'onLeave' is assigned a value but never used.","'onRoll' is assigned a value but never used.","'physicallyPresent' is assigned a value but never used.","'sick' is assigned a value but never used.","'underRest' is assigned a value but never used.",["376"],["377"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'addSickCoach' is assigned a value but never used.","'CoachData' is assigned a value but never used.","'setCoachData' is assigned a value but never used.","'CoachTableOn' is assigned a value but never used.","'setCoachTableOn' is assigned a value but never used.","'toggleCoach' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","'serialNo' is assigned a value but never used.","'owningRailway' is assigned a value but never used.","'coachNo' is assigned a value but never used.","'coachCode' is assigned a value but never used.","'mechCode' is assigned a value but never used.","'returnDate' is assigned a value but never used.","'pohStation' is assigned a value but never used.","'pohDate' is assigned a value but never used.","'iohStation' is assigned a value but never used.","'iohDate' is assigned a value but never used.","'angleCock' is assigned a value but never used.","'airBrakeWorks' is assigned a value but never used.","'carpentryWorks' is assigned a value but never used.","'pipeLineWorks' is assigned a value but never used.","'underGearWorks' is assigned a value but never used.","'description' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"379","fix":"380"},"Update the dependencies array to be: [loadProfile]",{"range":"381","text":"382"},[6807,6809],"[loadProfile]"]